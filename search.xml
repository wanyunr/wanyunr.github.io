<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker 搭建headscale服务端与derper中转</title>
      <link href="/clwkvm47w000sdsp4hhidap11.html"/>
      <url>/clwkvm47w000sdsp4hhidap11.html</url>
      
        <content type="html"><![CDATA[<h2 id="headscale"><a href="#headscale" class="headerlink" title="headscale"></a>headscale</h2><blockquote><h4 id="有关项目"><a href="#有关项目" class="headerlink" title="有关项目"></a>有关项目</h4><ul><li><a href="https://github.com/juanfont/headscale" rel="external nofollow noreferrer">juanfont&#x2F;headscale : Tailscale control server</a></li><li><a href="https://hub.docker.com/r/headscale/headscale/" rel="external nofollow noreferrer">⭐️ Docker headscale&#x2F;headscale</a></li><li><a href="https://github.com/iFargle/headscale-webui" rel="external nofollow noreferrer">⭐️ iFargle&#x2F;headscale-webui: A simple Headscale web UI</a></li><li><a href="https://github.com/niliovo/zerotier-aio-zh" rel="external nofollow noreferrer">niliovo&#x2F;zerotier-aio-zh: ztncui-aio的Docker镜像中文版本</a></li><li><a href="https://github.com/gurucomputing/headscale-ui" rel="external nofollow noreferrer">gurucomputing&#x2F;headscale-ui: A web frontend for the headscale Tailscale</a></li></ul><h4 id="有关教程"><a href="#有关教程" class="headerlink" title="有关教程"></a>有关教程</h4><ul><li>⭐️ <a href="https://www.nodeseek.com/post-37577-1" rel="external nofollow noreferrer">Docker 搭建 headscale 异地组网完整教程</a> （主要参考）</li><li><a href="https://blog.yfyang.me/blog/headscale-Tailscale" rel="external nofollow noreferrer">TailScale+Headscale 局域网组网全记录 | NorthSecond&amp;apos;s Blog</a> || <a href="https://www.amjun.com/1957.html" rel="external nofollow noreferrer">Docker 搭建 headscale 异地组网完整教程 - 阿蛮君博客</a></li><li><a href="https://www.nodeseek.com/post-31284-1" rel="external nofollow noreferrer">[原创教程]headscale服务自建derp服务器，加速双端连接效率</a></li></ul></blockquote><p>‍</p><h3 id="搭建headscale服务端"><a href="#搭建headscale服务端" class="headerlink" title="搭建headscale服务端"></a>搭建headscale服务端</h3><h4 id="1-创建相关文件"><a href="#1-创建相关文件" class="headerlink" title="1. 创建相关文件"></a>1. 创建相关文件</h4><p>创建 db.sqlite，再下载官网给的配置文件示例，然后按需修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/docker/headscale/config &amp;&amp; mkdir -p /home/docker/headscale/data &amp;&amp; \</span><br><span class="line"></span><br><span class="line">touch /home/docker/headscale/data/db.sqlite &amp;&amp; \</span><br><span class="line"></span><br><span class="line">wget https://github.com/juanfont/headscale/raw/v0.22.3/config-example.yaml -O /home/docker/headscale/config/config.yaml</span><br></pre></td></tr></table></figure><p>需要修改<strong>下载镜像对应版本号</strong>的 <code>config-example.yaml</code>​，否则可能配置文件无法对应导致启动报错。</p><h4 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2. 修改配置"></a>2. 修改配置</h4><p>修改相关配置文件，比如配置文件中配置 <code>127.0.0.1</code>​ 的话，那么就只能本机访问。这里修改为 <code>0.0.0.0</code>​ 那么就所有的 ip 都能访问（建议先使用<code>0.0.0.0</code>​，部署好后可尝试修改<code>127.0.0.1</code>​测试是否正常）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim /home/docker/headscale/config/config.yaml</span><br><span class="line"></span><br><span class="line"># 这将修改以下几个地方，其中server_url还需要另外修改</span><br><span class="line"># 1. server_url: https://example.com</span><br><span class="line"># 2. listen_addr: 0.0.0.0:8080</span><br><span class="line"># 3. metrics_listen_addr: 0.0.0.0:9090</span><br><span class="line"># 4. grpc_listen_addr: 0.0.0.0:50443</span><br><span class="line"># 5. nameservers:</span><br><span class="line">      - 119.29.29.29  （可选，如服务器再国内，最好加一个国内DNS）</span><br><span class="line">      - 1.1.1.1</span><br><span class="line"># 开随机端口</span><br><span class="line"># 6. randomize_client_port: true</span><br><span class="line"># 以通过 主机名 + 用户 + 基础域名 访问任意一台终端</span><br><span class="line"># 7. base_domain: wanyunr.com</span><br></pre></td></tr></table></figure><p>建议使用域名反代，否则可能出现某些安全验证问题</p><h4 id="3-启用内嵌的-derp"><a href="#3-启用内嵌的-derp" class="headerlink" title="3. 启用内嵌的 derp"></a>3. <strong>启用内嵌的 derp</strong></h4><p>当然你可以使用官方提供的 derp 服务器，但如果你想搭建自己的 derp 服务器，又不想另外搭建一个 derp 服务器，那么这是有必要的。</p><p>注意：使用此 derp 服务器，需要有域名并配置 ssl，否则请参考：<a href="https://www.amjun.com/1976.html" rel="external nofollow noreferrer">Docker 搭建中继服务器 derp - 纯 IP 实现</a> 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># /home/docker/headscale/config/config.yaml</span><br><span class="line">derp:</span><br><span class="line">  server:</span><br><span class="line"># xxx</span><br><span class="line">    enabled: true</span><br><span class="line"># xxx</span><br><span class="line">    region_id: 999</span><br><span class="line"># xxx</span><br><span class="line">    region_code: &quot;headscale&quot;</span><br><span class="line">    region_name: &quot;Headscale Embedded DERP&quot;</span><br><span class="line"># xxx</span><br><span class="line">    stun_listen_addr: &quot;0.0.0.0:3478&quot;</span><br></pre></td></tr></table></figure><p><code>enabled</code>​ 选项默认为 false，需要设置为 true。</p><h4 id="4-启动"><a href="#4-启动" class="headerlink" title="4. 启动"></a>4. 启动</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--name headscale \</span><br><span class="line">--restart always \</span><br><span class="line">-v /root/docker_data/headscale/config:/etc/headscale/ \</span><br><span class="line">-v /root/docker_data/headscale/data:/var/lib/headscale \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-p 9090:9090 \</span><br><span class="line">-p 3478:3478/udp \</span><br><span class="line">--restart always \</span><br><span class="line">headscale/headscale:0.22.3 \</span><br><span class="line">headscale serve</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-常用命令"><a href="#5-常用命令" class="headerlink" title="5. 常用命令"></a>5. 常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看用户</span><br><span class="line">docker exec -it headscale headscale users ls</span><br><span class="line"># 创建用户</span><br><span class="line">docker exec -it headscale headscale users create &lt;user&gt;</span><br><span class="line"># 生成apikey</span><br><span class="line">docker exec -it headscale headscale apikey create</span><br><span class="line"># 查询apikey</span><br><span class="line">docker exec -it headscale headscale apikey ls</span><br></pre></td></tr></table></figure><p>‍</p><h3 id="二、搭建web-ui"><a href="#二、搭建web-ui" class="headerlink" title="二、搭建web-ui"></a>二、搭建web-ui</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--name headscale-webui \</span><br><span class="line">--restart always \</span><br><span class="line">-v /root/docker_data/headscale/config:/etc/headscale/:ro \</span><br><span class="line">-v /root/docker_data/headscale/web-ui/data:/data \</span><br><span class="line">-u root \</span><br><span class="line">-p 5000:5000 \</span><br><span class="line">-e HS_SERVER=https://wanyunr.com \</span><br><span class="line">-e DOMAIN_NAME=https://wanyunr.com \</span><br><span class="line">-e SCRIPT_NAME=/admin \</span><br><span class="line">-e AUTH_TYPE=Basic \</span><br><span class="line">-e BASIC_AUTH_USER=user \</span><br><span class="line">-e BASIC_AUTH_PASS=passwd \</span><br><span class="line">-e KEY=&quot;xxxxxxxxxxxxJdVjaE=&quot; \</span><br><span class="line">--restart always \</span><br><span class="line">ifargle/headscale-webui:latest</span><br></pre></td></tr></table></figure><p>其中 <code>/home/docker/headscale/config</code>​ 为上面服务端的映射目录，这两个目录需要一致。<code>HS_SERVER</code>​ 和 <code>DOMAIN_NAME</code>​ 填写自己的域名 1。<code>KEY</code>​ 是用来加密待会需要保存的 apikey 的字符串，使用命令 <code>openssl rand -base64 32</code>​ 生成。</p><p>接下来需要创建 headscale 服务器的 api-key，这里设置一个比较久的过期时间。</p><p>‍</p><h3 id="三、配置-nginx-和-web-ui"><a href="#三、配置-nginx-和-web-ui" class="headerlink" title="三、配置 nginx 和 web-ui"></a>三、配置 nginx 和 web-ui</h3><h4 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    listen  [::]:443 ssl;</span><br><span class="line">    server_name wanyunr.com;</span><br><span class="line">    ssl_certificate /www/sites/wanyunr.com/ssl/fullchain.pem; </span><br><span class="line">    ssl_certificate_key /www/sites/wanyunr.com/ssl/privkey.pem; </span><br><span class="line">    # ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1; </span><br><span class="line">    # ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5; </span><br><span class="line">    # ssl_prefer_server_ciphers on; </span><br><span class="line">    # ssl_session_cache shared:SSL:10m; </span><br><span class="line">    # ssl_session_timeout 10m; </span><br><span class="line">    # add_header Strict-Transport-Security &quot;max-age=31536000&quot;; </span><br><span class="line">    # error_page 497 https://$host$request_uri; </span><br><span class="line">    # proxy_set_header X-Forwarded-Proto https; </span><br><span class="line">    # ssl_stapling on; </span><br><span class="line">    # ssl_stapling_verify on; </span><br><span class="line"></span><br><span class="line">    location ^~/ &#123;</span><br><span class="line">        proxy_pass http://localhost:8080/;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Host $server_name;</span><br><span class="line">        proxy_redirect https:// https://;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~/admin/ &#123;</span><br><span class="line">        proxy_pass http://localhost:5000/admin/;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  wanyunr.com;</span><br><span class="line">    rewrite ^(.*)$ https://$host:443$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存配置后重启 nginx后，如果配置正确，通过 <code>https://域名/admin</code>​ 应该可以访问到 web-ui 界面，输入容器启动时配置的用户名密码即可进入。</p><p>‍</p><ol start="2"><li><h4 id="配置-web-ui"><a href="#配置-web-ui" class="headerlink" title="配置 web-ui"></a>配置 web-ui</h4></li></ol><p>上面提示输入 apikey，这个需要 headscale 服务端生成，这里设置一个比较长的时间，根据自己的需要即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it headscale headscale apikeys create -e 10000d</span><br></pre></td></tr></table></figure><p>运行命令后将生成的 key 输入，点击 save 即可</p><h3 id="四、创建用户和授权密钥"><a href="#四、创建用户和授权密钥" class="headerlink" title="四、创建用户和授权密钥"></a>四、创建用户和授权密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#  创建用户</span><br><span class="line"></span><br><span class="line">docker exec -it headscale headscale users create hz</span><br></pre></td></tr></table></figure><p>授权密码的作用是，客户端登陆时不需要再服务端进行确认，阿蛮君总是喜欢使用简单的方式，所以就选择这种方式了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># reusable 参数代表可以重复使用，不加的话密钥只能用来一个客户端加入</span><br><span class="line"></span><br><span class="line">docker exec -it headscale headscale preauthkeys create -e 10000d --reusable -u hz</span><br><span class="line"></span><br><span class="line"># 查看密钥 </span><br><span class="line"></span><br><span class="line">docker exec -it headscale headscale preauthkeys list -u hz</span><br></pre></td></tr></table></figure><p>这里记得记录好授权密钥，下面将会用到。</p><h4 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h4><p>headscale 相当于是重新实现了 tailscale 的服务端，客户端基本还是用的 tailscale。</p><p>tailscale 客户端下载地址：<a href="https://tailscale.com/download/" rel="external nofollow noreferrer">https://tailscale.com/download/</a></p><h5 id="1-windows"><a href="#1-windows" class="headerlink" title="1. windows"></a>1. windows</h5><p><strong>1.1 安装客户端</strong></p><p>下载 windows 客户端并进行安装。</p><p><strong>1.2 安装注册表</strong></p><p>访问 <code>https://wanyunr.com/windows</code>​，可以看见配置的教程。</p><p>提示需要修改注册表，这里可以直接 访问<code>https://wanyunr.com/windows/tailscale.reg</code>​ 下载文件后，双击运行文件进行安装即可。</p><p><strong>1.3 登录</strong></p><p>在 tailscale 的安装目录下使用 cmd 打开，输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tailscale login --login-server https://wanyunr.com --authkey e5bc07f5325dd282563295f03b7894dd686416b47798c998 --accept-dns=false --accept-routes</span><br></pre></td></tr></table></figure><p>这里的 authkey 是第四步生成的，然后在服务器使用命令查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it headscale headscale nodes &lt;username&gt;</span><br></pre></td></tr></table></figure><h5 id="2-linux"><a href="#2-linux" class="headerlink" title="2. linux"></a>2. linux</h5><p><strong>2.1 脚本安装</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://tailscale.com/install.sh | sh &amp;&amp; \</span><br><span class="line"></span><br><span class="line">tailscale login --login-server https://head.uve.cc --authkey e5bc07f5325dd282563295f03b7894dd686416b47798c998 --accept-dns=false --accept-routes</span><br></pre></td></tr></table></figure><p>这里仅仅安装方式不同，登录的命令完全一样。</p><h5 id="2-2-docker-安装"><a href="#2-2-docker-安装" class="headerlink" title="2.2 docker 安装"></a>2.2 docker 安装</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line"></span><br><span class="line">--name=tailscaled \</span><br><span class="line"></span><br><span class="line">-v /home/docker/tailscale/:/var/lib \</span><br><span class="line"></span><br><span class="line">-v /dev/net/tun:/dev/net/tun \</span><br><span class="line"></span><br><span class="line">-e TS_STATE_DIR=/var/lib/state/ \</span><br><span class="line"></span><br><span class="line">--network=host \</span><br><span class="line"></span><br><span class="line">--restart always \</span><br><span class="line"></span><br><span class="line">--privileged tailscale/tailscale:v1.44.0 \</span><br><span class="line"></span><br><span class="line">tailscaled --tun=tailscale0 -no-logs-no-support=true</span><br></pre></td></tr></table></figure><p>这里需要将 <code>TS_STATE_DIR</code>​ 指定的文件夹持久化，否则删除容器再新建后，在服务端能看见重复的设备。并且需要指定 <code>--tun=tailscale0</code>​，不然似乎不能在宿主机创建网卡。</p><p>然后使用如下命令进行登录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it tailscaled tailscale login --login-server https://wanyunr.com --accept-dns=false --accept-routes=false --authkey b6a9b4f4e9c3a7c7e7b9b1a3a6b9e6b7a5e7c2a1e3a0a4a1 --advertise-routes=172.21.9.0/24,172.30.1.0/24,172.26.1.0/24,172.20.2.0/23</span><br></pre></td></tr></table></figure><p>根据自己网络情况设置 <code>--advertise-routes</code>​，我这是需要通过这台内网机器访问公司其他网络。</p><p>如果出现如下错误：</p><blockquote><p>running [&#x2F;sbin&#x2F;ip6tables -t filter -N ts-input –wait]: exit status 3: modprobe: can’t change directory to ‘&#x2F;lib&#x2F;modules’: No such file or directory<br>ip6tables v1.8.8 (legacy): can’t initialize ip6tables table &#96;filter’: Table does not exist (do you need to insmod?)<br>Perhaps ip6tables or your kernel needs to be upgraded</p></blockquote><p>执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 防止探测ip6table</span><br><span class="line"></span><br><span class="line">sudo modprobe ip6table_filter</span><br></pre></td></tr></table></figure><h5 id="3-安卓"><a href="#3-安卓" class="headerlink" title="3. 安卓"></a>3. 安卓</h5><p><strong>3.1 安装并配置</strong></p><p><a href="https://f-droid.org/packages/com.tailscale.ipn/" rel="external nofollow noreferrer">f-droid 下载</a></p><p>安装后，点击右上角三个设置自定义登录地址，点击 Login in，会出现一串命令，复制<code>key</code>​后面的部分</p><p><strong>3.2 手机端注册命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it headscale headscale nodes register --user &lt;username&gt; --key nodekey:10xxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>‍</p><h2 id="derper"><a href="#derper" class="headerlink" title="derper"></a>derper</h2><blockquote><ul><li>⭐️ <a href="https://icloudnative.io/posts/custom-derp-servers/" rel="external nofollow noreferrer">Part : Tailscale 基础教程：部署私有 DERP 中继服务器</a></li><li><a href="https://www.amjun.com/1975.html" rel="external nofollow noreferrer">Docker 搭建中继服务器 derp - 需要域名并配置 ssl - 阿蛮君博客</a></li></ul></blockquote><h3 id="有ssl证书"><a href="#有ssl证书" class="headerlink" title="有ssl证书"></a>有ssl证书</h3><blockquote><p>没有搭建成功，需要可参考：</p><p><a href="https://www.amjun.com/1975.html" rel="external nofollow noreferrer">Docker 搭建中继服务器 derp - 需要域名并配置 ssl - 阿蛮君博客</a></p><p><a href="https://icloudnative.io/posts/custom-derp-servers/#%E4%BD%BF%E7%94%A8%E5%9F%9F%E5%90%8D" rel="external nofollow noreferrer">Tailscale 基础教程：部署私有 DERP 中继服务器</a></p></blockquote><h3 id="无证书模式"><a href="#无证书模式" class="headerlink" title="无证书模式"></a>无证书模式</h3><blockquote><p>原理：将域名验证相关的内容删除或注释，并创建自签名证书。除了 derper 之外，Tailscale 客户端还需要<strong>跳过域名验证</strong>，这个需要在 DERP 的配置中设置。而 Headscale 的本地 YAML 文件目前还不支持这个配置项，需要使用在线 URL。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># host模式，需要443端口</span><br><span class="line">docker run -d \</span><br><span class="line">  --restart always \</span><br><span class="line">  --net host \</span><br><span class="line">  --name derper \</span><br><span class="line">  ghcr.io/yangchuansheng/derper:latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># bridge 模式</span><br><span class="line">docker run -d \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 3478:3478/udp \</span><br><span class="line">  -p 8443:443 \</span><br><span class="line">  --name derper \</span><br><span class="line">  ghcr.io/yangchuansheng/ip_derper</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>‍</p><h3 id="使用节点"><a href="#使用节点" class="headerlink" title="使用节点"></a>使用节点</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/headscale/config.yaml</span></span><br><span class="line">derp:</span><br><span class="line">  <span class="comment"># List of externally available DERP maps encoded in JSON</span></span><br><span class="line">  urls:</span><br><span class="line">  <span class="comment">#  - https://controlplane.tailscale.com/derpmap/default</span></span><br><span class="line">    - https://xxxxx/derp.json</span><br><span class="line">  paths: []</span><br></pre></td></tr></table></figure><p>‍</p><p>‍</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Regions&quot;: &#123;</span><br><span class="line"><span class="code">    &quot;1&quot;: &#123;</span></span><br><span class="line"><span class="code">      &quot;RegionID&quot;: 1,</span></span><br><span class="line"><span class="code">      &quot;RegionCode&quot;: &quot;ali-sh&quot;,</span></span><br><span class="line"><span class="code">      &quot;RegionName&quot;: &quot;Aliyun GuangZhou&quot;,</span></span><br><span class="line"><span class="code">      &quot;Nodes&quot;: [</span></span><br><span class="line"><span class="code">        &#123;</span></span><br><span class="line"><span class="code">          &quot;Name&quot;: &quot;1&quot;,</span></span><br><span class="line"><span class="code">          &quot;RegionID&quot;: 901,</span></span><br><span class="line"><span class="code">          &quot;DERPPort&quot;: 443,</span></span><br><span class="line"><span class="code">          &quot;HostName&quot;: &quot;xxxx&quot;,</span></span><br><span class="line"><span class="code">          &quot;IPv4&quot;: &quot;xxxx&quot;,</span></span><br><span class="line"><span class="code">          &quot;InsecureForTests&quot;: true</span></span><br><span class="line"><span class="code">        &#125;</span></span><br><span class="line"><span class="code">      ]</span></span><br><span class="line"><span class="code">    &#125;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><p>配置解析：</p><ul><li><code>HostName</code>​ 直接填 derper 的公网 IP，即和 <code>IPv4</code>​ 的值相同。</li><li><code>InsecureForTests</code>​ 一定要设置为 true，以跳过域名验证（<strong>必须配置</strong>）</li></ul><h3 id="derper-查用命令"><a href="#derper-查用命令" class="headerlink" title="derper 查用命令"></a>derper 查用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># docker 运行的客户端</span><br><span class="line">docker exec -it tailscaled tailscale netcheck</span><br><span class="line"># 非 docker 运行的客户端</span><br><span class="line">tailscale netcheck</span><br><span class="line"></span><br><span class="line">#使用 tailscale status 命令可以查看到当前网络的状态</span><br><span class="line"># docker 运行的客户端</span><br><span class="line">docker exec -it tailscaled tailscale status</span><br><span class="line"># 非 docker 运行的客户端</span><br><span class="line">tailscale status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 组网 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Syncthing – 在 Ubuntu/Debian 上安装 Syncthing</title>
      <link href="/apt-install-syncthing.html"/>
      <url>/apt-install-syncthing.html</url>
      
        <content type="html"><![CDATA[<p>因为使用 Docker 安装Syncthing映射目录太麻烦，所以我在这里使用演示用<code>apt</code>安装。</p><h4 id="步骤1-将Syncthing存储库添加到apt源"><a href="#步骤1-将Syncthing存储库添加到apt源" class="headerlink" title="步骤1 - 将Syncthing存储库添加到apt源"></a>步骤1 - 将Syncthing存储库添加到apt源</h4><p>首先，我们将将存储库添加到apt数据库中，以确保我们可以从存储库下载软件包。在终端中执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://apt.syncthing.net/ syncthing stable&quot; | sudo tee /etc/apt/sources.list.d/syncthing.list</span><br></pre></td></tr></table></figure><h4 id="步骤2-添加Syncthing的PGP密钥"><a href="#步骤2-添加Syncthing的PGP密钥" class="headerlink" title="步骤2 - 添加Syncthing的PGP密钥"></a>步骤2 - 添加Syncthing的PGP密钥</h4><p>接下来，我们将使用以下命令将Syncthing存储库的PGP密钥添加到apt密钥中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https://syncthing.net/release-key.txt | sudo apt-key add -</span><br></pre></td></tr></table></figure><h4 id="步骤3-更新apt的软件包数据库"><a href="#步骤3-更新apt的软件包数据库" class="headerlink" title="步骤3 - 更新apt的软件包数据库"></a>步骤3 - 更新apt的软件包数据库</h4><p>然后，使用以下命令更新软件包数据库，以获取最新的软件包和依赖项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h4 id="步骤4-安装Syncthing"><a href="#步骤4-安装Syncthing" class="headerlink" title="步骤4 - 安装Syncthing"></a>步骤4 - 安装Syncthing</h4><p>完成上述步骤后，您可以最终安装Syncthing。在终端中运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install syncthing</span><br></pre></td></tr></table></figure><p>安装完成后运行 <code>syncthing</code> ，将会在<code>~/.config/syncthing</code> 或<code>~/.local/state/syncthing</code>下产生配置文件</p><h4 id="步骤5-启用Syncthing服务"><a href="#步骤5-启用Syncthing服务" class="headerlink" title="步骤5 - 启用Syncthing服务"></a>步骤5 - 启用Syncthing服务</h4><p>现在已经安装了Syncthing，但我们需要使用systemctl命令手动启用它，以便在启动时自动启动。官方的Syncthing软件包在<code>/lib/systemd/system/syncthing@.service</code>​路径下。</p><p>要启用Syncthing，请使用以下命令，<strong>将”username”替换为您实际的用户名</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable syncthing@username.service</span><br></pre></td></tr></table></figure><p>现在使用systemctl命令启动Syncthing服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start syncthing@username.service</span><br></pre></td></tr></table></figure><h4 id="步骤6-开放端口"><a href="#步骤6-开放端口" class="headerlink" title="步骤6 - 开放端口"></a>步骤6 - 开放端口</h4><p>参考：<a href="https://docs.syncthing.net/users/firewall.html#firewall-setup" rel="external nofollow noreferrer">防火墙设置 — Syncthing文档</a></p><p>如果您的系统具有本地防火墙，则需要打开以下端口 传入和传出流量：</p><ul><li>端口 <strong>22000&#x2F;TCP</strong>：基于 TCP 的同步协议流量</li><li>端口 <strong>22000&#x2F;UDP</strong>：基于 QUIC 的同步协议流量</li><li>端口 <strong>21027&#x2F;UDP</strong>：用于 IPv4 上的发现广播和 IPv6 上的组播</li></ul><h4 id="步骤6-使用-Syncthing-Web-UI"><a href="#步骤6-使用-Syncthing-Web-UI" class="headerlink" title="步骤6 - 使用 Syncthing Web UI"></a>步骤6 - 使用 Syncthing Web UI</h4><p>默认情况下，Syncthing服务监听端口<code>127.0.0.1:8384</code>​，如果要用 <code>ip:port</code>​访问，需要在修改文件 <code>~/.config/syncthing/config.xml</code>​的55行，将<code>127.0.0.1:8384</code>​ 修改为<code>0.0.0.0:8384</code>​。同时开放防火墙的<code>8384</code>​ 端口。</p><p>现在我们就可以在浏览器打开 Syncthing Web UI 了。</p><p><em>小提示：配置完需要同步的设备与文件夹之后可以关闭 <code>8384</code> 端口，不会影响同步。</em></p><hr><blockquote><p>参考：<a href="https://docs.syncthing.net/" rel="external nofollow noreferrer">Syncthing documentation</a></p><p>​           <a href="https://www.linuxfordevices.com/tutorials/ubuntu/syncthing-install-and-setup" rel="external nofollow noreferrer">Syncthing - Install and Setup Syncthing on Ubuntu&#x2F;Debian - LinuxForDevices</a></p></blockquote><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Syncthing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用七牛云同步思源笔记（全指南）</title>
      <link href="/qiniu-siyuan.html"/>
      <url>/qiniu-siyuan.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>七牛云有一定的<a href="https://developer.qiniu.com/af/kb/1574/free-credit-information?category=kb" rel="external nofollow noreferrer">免费额度</a>，完全够用来同步笔记</p></blockquote><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>一个已经<strong>实名</strong>且<strong>绑定邮箱</strong>的七牛云账号</li><li>一个七牛云储存空间，需绑定备案域名</li><li>一对密钥（<a href="https://portal.qiniu.com/user/key" rel="external nofollow noreferrer">点击前往创建</a>）</li></ul><p>不满足以上条件的请查看官网指南：<a href="https://developer.qiniu.com/kodo/4263/operational-guidelines-for-the-new-bucket" rel="external nofollow noreferrer">对象存储&gt; 快速入门 &gt; 控制台用户指南 &gt;新建存储空间</a> </p><h3 id="填写配置"><a href="#填写配置" class="headerlink" title="填写配置"></a>填写配置</h3><p>做好准备工作后，我们就可以来填写思源笔记的同步配置了。</p><p>首先，在 设置&gt;云端 中的云端存储服务提供商选择 <strong>S3</strong>，需要填写的内容参考下表。</p><table><thead><tr><th>需要填写的项</th><th>填写内容</th><th></th></tr></thead><tbody><tr><td>Endpoint</td><td>请对照文末的表填写（比如我创建的是华东-浙江的储存空间，<br />则我这里填写：s3-cn-east-1.qiniucs.com）<br /></td><td></td></tr><tr><td>Access Key</td><td>密钥中的 AK &#x2F; AccessKey</td><td></td></tr><tr><td>Secret Key</td><td>对应密钥的 SK &#x2F; SecretKey</td><td></td></tr><tr><td>Bucket</td><td>储存空间的名称</td><td></td></tr><tr><td>Region</td><td>请对照文末的表填写（比如我创建的是华东-浙江的储存空间，<br />则我这里填写：cn-east-1）</td><td></td></tr><tr><td>Timeout (s)</td><td>10（如果网络状况不好，可以填大一点）</td><td></td></tr></tbody></table><p>填写好之后，就可以打开<strong>启用云端同步</strong>了。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>所有需要同步的设备需要使用同样的数据仓库密钥</li><li>需要备案域名（一个月内不用）</li></ul><table><thead><tr><th>存储区域</th><th>区域简称</th><th>访问 Endpoint<br /></th><th></th></tr></thead><tbody><tr><td>华东-浙江</td><td>cn-east-1</td><td>s3-cn-east-1.qiniucs.com<br /></td><td></td></tr><tr><td>华东-浙江2</td><td>cn-east-2</td><td>s3-cn-east-2.qiniucs.com<br /></td><td></td></tr><tr><td>华北-河北</td><td>cn-north-1</td><td>s3-cn-north-1.qiniucs.com<br /></td><td></td></tr><tr><td>华南-广东</td><td>cn-south-1</td><td>s3-cn-south-1.qiniucs.com<br /></td><td></td></tr><tr><td>北美-洛杉矶</td><td>us-north-1</td><td>s3-us-north-1.qiniucs.com<br /></td><td></td></tr><tr><td>亚太-新加坡（原东南亚）</td><td>ap-southeast-1</td><td>s3-ap-southeast-1.qiniucs.com<br /></td><td></td></tr></tbody></table><p>参考：<a href="https://developer.qiniu.com/kodo/4088/s3-access-domainname" rel="external nofollow noreferrer">七牛云开发者中心&gt;对象存储 &gt; 使用指南 &gt; 开发指南 &gt; AWS S3 兼容 &gt; 服务域名</a></p><p>‍</p><p>‍</p><p>‍</p><p>‍</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思源笔记 </tag>
            
            <tag> 七牛云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两种方式反代 JSDelivr</title>
      <link href="/jsd-proxy.html"/>
      <url>/jsd-proxy.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、服务器Nginx反代"><a href="#一、服务器Nginx反代" class="headerlink" title="一、服务器Nginx反代"></a>一、服务器Nginx反代</h2><p>反代后的链接为<code>https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt</code>​</p><p><strong>配置文件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name domain_name;</span><br><span class="line">    index index.html;</span><br><span class="line">    root /www/wwwroot/jsd;</span><br><span class="line"></span><br><span class="line">    #反盗链</span><br><span class="line">    # location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|gif|jpg|jpeg|png|webp|mp4)$ &#123;</span><br><span class="line">    #     expires 30d;</span><br><span class="line">    #     valid_referers none blocked domain_name domain_name_2;</span><br><span class="line">    #     if ($invalid_referer) &#123;</span><br><span class="line">    #         return 404;</span><br><span class="line">    #     &#125;</span><br><span class="line">    # &#125;</span><br><span class="line"></span><br><span class="line">    #阻止用户访问具有特定扩展名的文件</span><br><span class="line">    # location ~ \.(zip|rar|7z|apk|ipa|exe|msi|m3u|m3u8|mp4|mp3|avi|gif|jpg|jpeg|png|webp)$ &#123;</span><br><span class="line">    #     deny all;</span><br><span class="line">    # &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /npm/ &#123;</span><br><span class="line">        proxy_pass https://cdn.jsdelivr.net/npm/;</span><br><span class="line">        proxy_set_header Host cdn.jsdelivr.net;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line">        proxy_ssl_name cdn.jsdelivr.net;</span><br><span class="line">        proxy_ssl_server_name on;</span><br><span class="line"></span><br><span class="line">        #Set Nginx Cache</span><br><span class="line">        if ( $uri ~* &quot;\.(gif|png|jpg|css|js|woff|woff2|txt|sh)$&quot; ) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        proxy_ignore_headers Set-Cookie Cache-Control expires;</span><br><span class="line">        proxy_cache cache_one;</span><br><span class="line">        proxy_cache_key $host$uri$is_args$args;</span><br><span class="line">        proxy_cache_valid 200 304 301 302 4320m;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ /gh/ &#123;</span><br><span class="line">        proxy_pass https://cdn.jsdelivr.net/gh/;</span><br><span class="line">        proxy_set_header Host cdn.jsdelivr.net;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line">        proxy_ssl_name cdn.jsdelivr.net;</span><br><span class="line">        proxy_ssl_server_name on;</span><br><span class="line"></span><br><span class="line">        #Set Nginx Cache</span><br><span class="line">        if ( $uri ~* &quot;\.(gif|png|jpg|css|js|woff|woff2|txt|sh)$&quot; ) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        proxy_ignore_headers Set-Cookie Cache-Control expires;</span><br><span class="line">        proxy_cache cache_one;</span><br><span class="line">        proxy_cache_key $host$uri$is_args$args;</span><br><span class="line">        proxy_cache_valid 200 304 301 302 4320m;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ /wp/ &#123;</span><br><span class="line">        proxy_pass https://cdn.jsdelivr.net/wp/;</span><br><span class="line">        proxy_set_header Host cdn.jsdelivr.net;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line">        proxy_ssl_name cdn.jsdelivr.net;</span><br><span class="line">        proxy_ssl_server_name on;</span><br><span class="line"></span><br><span class="line">        #Set Nginx Cache</span><br><span class="line">        if ( $uri ~* &quot;\.(gif|png|jpg|css|js|woff|woff2|txt|sh)$&quot; ) &#123;</span><br><span class="line">            expires 12h;</span><br><span class="line">        &#125;</span><br><span class="line">        proxy_ignore_headers Set-Cookie Cache-Control expires;</span><br><span class="line">        proxy_cache cache_one;</span><br><span class="line">        proxy_cache_key $host$uri$is_args$args;</span><br><span class="line">        proxy_cache_valid 200 304 301 302 4320m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # set site favicon</span><br><span class="line">    location = /favicon.ico &#123;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #清理缓存规则</span><br><span class="line">    location ~ /purge(/.*) &#123;</span><br><span class="line">        proxy_cache_purge cache_one $host$1$is_args$args;</span><br><span class="line">        #access_log  /www/wwwlogs/js_purge_cache.log;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log /www/wwwlogs/jsd.log;</span><br><span class="line">    error_log /www/wwwlogs/jsd.error.log;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>‍</p><h2 id="二、PHP-服务器反代"><a href="#二、PHP-服务器反代" class="headerlink" title="二、PHP 服务器反代"></a>二、PHP 服务器反代</h2><p>该方法适用于有PHP环境虚拟机，可同时反代<code>cdn.jsdelivr.net</code>​、<code>raw.githubusercontent.com</code>​和<code>github.com</code>​ 的 Releases 和 Archive 。</p><p><strong>使用方法：</strong>将下面的代码保存为<code>jsd.php</code>​，得到链接格式为<code>https://example.com/jsd.php?url=https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt</code>​</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$allowed_domains</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;cdn.jsdelivr.net&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;raw.githubusercontent.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;github.com&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;请将参数填写完整，在当前路径后加上?url=反代的链接&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$host</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>, PHP_URL_HOST); <span class="comment">// 获取 URL 中的域名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$host</span>, <span class="variable">$allowed_domains</span>)) &#123; <span class="comment">// 验证域名是否符合要求</span></span><br><span class="line">    <span class="comment">// 设置响应头部 Content-Type 和 Content-Disposition</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/plain; charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition: inline; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$url</span>) . <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Transfer-Encoding: binary&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Accept-Ranges: bytes&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_USERAGENT, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">false</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_REFERER, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data_down</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data_down</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;代理时发生错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测文件编码是否为 UTF-8</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">mb_check_encoding</span>(<span class="variable">$data_down</span>, <span class="string">&#x27;UTF-8&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">//文件编码不是 UTF-8，直接下载</span></span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type:&#x27;</span> . <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>, CURLINFO_CONTENT_TYPE)); </span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$url</span>) . <span class="string">&#x27;&quot;&#x27;</span>); </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$data_down</span>; </span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$data_down</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 域名不符合要求</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;本站不支持该链接&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可配合前端主页使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>加速访问<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Arial&#x27;</span>, sans-serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#292b30</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ebebeb</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">3%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#a9a9a9</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#292b30</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#292b30</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#292b30</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#292b30</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">goToUrl</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> url = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;input&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> domains = [<span class="string">&quot;cdn.jsdelivr.net&quot;</span>, <span class="string">&quot;raw.githubusercontent.com&quot;</span>, <span class="string">&quot;github.com&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> urlDomain = <span class="keyword">new</span> <span class="title function_">URL</span>(url).<span class="property">hostname</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (domains.<span class="title function_">includes</span>(urlDomain)) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/jsd.php?url=&quot;</span> + <span class="built_in">decodeURIComponent</span>(url);</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> tip = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                tip.<span class="property">innerText</span> = <span class="string">&quot;不支持该域名&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                tip.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;color:red;font-size:12px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transition:opacity 0.5s ease-in-out;opacity:1;z-index:10000;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(tip);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(tip);</span></span><br><span class="line"><span class="language-javascript">                &#125;, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 添加事件监听器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;input&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">addEventListener</span>(<span class="string">&quot;keyup&quot;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (event.<span class="property">keyCode</span> === <span class="number">13</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;goBtn&quot;</span>).<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>加速访问服务<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入链接(带HTTP/HTTPS):&quot;</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;goBtn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;goToUrl()&quot;</span>&gt;</span>前往<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用 Docker 容器</title>
      <link href="/dokcer-container.html"/>
      <url>/dokcer-container.html</url>
      
        <content type="html"><![CDATA[<h2 id="Siyuan（在线笔记）"><a href="#Siyuan（在线笔记）" class="headerlink" title="Siyuan（在线笔记）"></a>Siyuan（在线笔记）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -v /root/docker_data/siyuan/workspace:/siyuan/workspace \</span><br><span class="line">  -p 6806:6806 \</span><br><span class="line">  -u $(id -u):$(id -g) \</span><br><span class="line">  --name siyuan \</span><br><span class="line">  b3log/siyuan:latest \</span><br><span class="line">  --workspace=/siyuan/workspace/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -v /root/docker_data/siyuan/workspace:/siyuan/workspace \</span><br><span class="line">  -p 6806:6806 \</span><br><span class="line">  -u $(id -u):$(id -g) \</span><br><span class="line">  --name siyuan \</span><br><span class="line">  b3log/siyuan:v2.8.0 \  #指定版本</span><br><span class="line">  --workspace=/siyuan/workspace/</span><br></pre></td></tr></table></figure><p> b3log&#x2F;siyuan:v2.5.0 \</p><h2 id="vaultwarden-x2F-Bitwarden（密码库）"><a href="#vaultwarden-x2F-Bitwarden（密码库）" class="headerlink" title="vaultwarden&#x2F;Bitwarden（密码库）"></a>vaultwarden&#x2F;Bitwarden（密码库）</h2><p><a href="https://github.com/dani-garcia/vaultwarden" rel="external nofollow noreferrer">github.com&#x2F;dani-garcia&#x2F;vaultwarden</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#首次部署</span><br><span class="line">docker pull vaultwarden/server:latest</span><br><span class="line">docker run -d --name vaultwarden -v /root/docker_data/vw-data/:/data/ -p 80:80 vaultwarden/server:latest</span><br><span class="line">#禁止注册</span><br><span class="line">docker run -d --name bitwarden \</span><br><span class="line">  -e SIGNUPS_ALLOWED=false \</span><br><span class="line">  -v /root/docker_data/vw-data/:/data/ \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">  vaultwarden/server:latest</span><br></pre></td></tr></table></figure><h2 id="uptime-kuma-主机监控"><a href="#uptime-kuma-主机监控" class="headerlink" title="uptime-kuma(主机监控)"></a>uptime-kuma(主机监控)</h2><p><a href="https://github.com/louislam/uptime-kuma" rel="external nofollow noreferrer">https://github.com/louislam/uptime-kuma</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always \</span><br><span class="line">  --name uptime-kuma \</span><br><span class="line">  -p 3001:3001 \</span><br><span class="line">  -v /root/docker_data/uptime-kuma:/app/data \</span><br><span class="line">  louislam/uptime-kuma:1</span><br></pre></td></tr></table></figure><h2 id="Goproxy"><a href="#Goproxy" class="headerlink" title="Goproxy"></a>Goproxy</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=&quot;gh-proxy-py&quot; \</span><br><span class="line">  -p 0.0.0.0:34860:80 \</span><br><span class="line">  --restart=always \</span><br><span class="line">  hunsh/gh-proxy-py:latest</span><br></pre></td></tr></table></figure><h2 id="Tinyfilemanager"><a href="#Tinyfilemanager" class="headerlink" title="Tinyfilemanager"></a>Tinyfilemanager</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d \</span><br><span class="line">-v /absolute/path:/var/www/html/data \</span><br><span class="line">-p <span class="number">3480</span>:<span class="number">80</span> --restart=always \</span><br><span class="line">--name tinyfilemanager \</span><br><span class="line">tinyfilemanager/tinyfilemanager:master</span><br></pre></td></tr></table></figure><h2 id="Filecodebox-（文件存取柜）"><a href="#Filecodebox-（文件存取柜）" class="headerlink" title="Filecodebox （文件存取柜）"></a>Filecodebox （文件存取柜）</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -d \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -p <span class="number">12345</span>:<span class="number">12345</span> \</span><br><span class="line">    -v /root/docker_data/FileCodeBox/:/app/data \</span><br><span class="line">    --name filecodebox lanol/filecodebox:latest</span><br></pre></td></tr></table></figure><h2 id="Waline（评论系统）"><a href="#Waline（评论系统）" class="headerlink" title="Waline（评论系统）"></a>Waline（评论系统）</h2><p>需下载 <a href="https://github.com/walinejs/waline/blob/main/assets/waline.sqlite" rel="external nofollow noreferrer">waline.sqlite</a> 至<code>/root/docker_data/waline/data</code>下</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  waline:</span><br><span class="line">    container_name: waline</span><br><span class="line">    image: lizheming/waline:latest</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8360</span>:<span class="number">8360</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/docker_data/waline/data:/app/data</span><br><span class="line">    environment:</span><br><span class="line">      TZ: <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">      SQLITE_PATH: <span class="string">&#x27;/app/data&#x27;</span></span><br><span class="line">      JWT_TOKEN: <span class="string">&#x27;Your token&#x27;</span></span><br><span class="line">      SITE_NAME: <span class="string">&#x27;网站名</span></span><br><span class="line"><span class="string">      SITE_URL: &#x27;</span>https://www.example.com<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      SECURE_DOMAINS: &#x27;</span>www.example.com<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      AUTHOR_EMAIL: &#x27;</span>email<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      lang: &#x27;</span>zh-CN<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>‍</p><h2 id="Flare-书签"><a href="#Flare-书签" class="headerlink" title="Flare 书签"></a>Flare 书签</h2><p><a href="https://soulteary.com/2022/02/23/building-a-personal-bookmark-navigation-app-from-scratch-flare.html" rel="external nofollow noreferrer">building-a-personal-bookmark-navigation-app-from-scratch-flare.html</a></p><p><a href="https://github.com/soulteary/docker-flare" rel="external nofollow noreferrer">https://github.com/soulteary/docker-flare</a></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.6&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  flare:</span><br><span class="line">    image: soulteary/flare</span><br><span class="line">    restart: always</span><br><span class="line">    <span class="comment"># 默认无需添加任何参数，如有特殊需求</span></span><br><span class="line">    <span class="comment"># 可阅读文档 https://github.com/soulteary/docker-flare/blob/main/docs/advanced-startup.md</span></span><br><span class="line">    command: flare</span><br><span class="line">    <span class="comment"># 启用账号登录模式</span></span><br><span class="line">    command: flare --nologin=<span class="number">0</span></span><br><span class="line">    environment:</span><br><span class="line">      <span class="comment"># 如需开启用户登录模式，需要先设置 `nologin` 启动参数为 `0`</span></span><br><span class="line">      <span class="comment"># 如开启 `nologin`，未设置 FLARE_USER，则默认用户为 `flare`</span></span><br><span class="line">      - FLARE_USER=flare</span><br><span class="line">      <span class="comment"># 指定你自己的账号密码，如未设置 `FLARE_USER`，则会默认生成密码并展示在应用启动日志中</span></span><br><span class="line">      - FLARE_PASS=<span class="number">123456</span></span><br><span class="line">      <span class="comment"># 是否开启“使用向导”，访问 `/guide`</span></span><br><span class="line">      <span class="comment"># - FLARE_GUIDE=1</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">5005</span>:<span class="number">5005</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/docker_data/flare/app:/app</span><br></pre></td></tr></table></figure><p><strong>或者</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -p 5005:5005 \</span><br><span class="line">    -v /root/docker_data/docker/flare/app:/app \</span><br><span class="line">    -v FLARE_USER=flare \</span><br><span class="line">    -v FLARE_PASS=123456 \</span><br><span class="line">    --name flare soulteary/flare:latest</span><br></pre></td></tr></table></figure><p><strong>反代配置</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="attribute">proxy_pass</span> http://127.0.0.1:3020/;       <span class="comment"># 注意改成你实际使用的端口</span></span><br><span class="line">  <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> /<span class="variable">$1</span> <span class="literal">break</span>;</span><br><span class="line">  <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="memos-类似-Flome"><a href="#memos-类似-Flome" class="headerlink" title="memos(类似 Flome)"></a>memos(类似 Flome)</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name memos -p 5230:5230 -v /root/docker_data/memos/.memos/:/var/opt/memos neosmemo/memos:latest</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  memos:</span><br><span class="line">    image: neosmemo/memos:latest</span><br><span class="line">    container_name: memeos</span><br><span class="line">    hostname: memeos</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;5230:5230&quot;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/docker_data/memos/.memos/:/var/opt/memos</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure><h2 id="Nginx-Proxy-Manager（Docker-Proxy）"><a href="#Nginx-Proxy-Manager（Docker-Proxy）" class="headerlink" title="Nginx Proxy Manager（Docker Proxy）"></a>Nginx Proxy Manager（Docker Proxy）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker_data/npm</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/docker_data/npm</span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><p><strong>docker-compose.yml</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&#x27;80:80&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">      - <span class="string">&#x27;81:81&#x27;</span>  <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">      - <span class="string">&#x27;443:443&#x27;</span> <span class="comment"># 冒号左边可以改成自己服务器未被占用的端口</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/docker_data/npm/data:/data <span class="comment"># 冒号左边可以改路径，现在是表示把数据存放在在当前文件夹下的 data 文件夹中</span></span><br><span class="line">      - /root/docker_data/npm/etc/letsencrypt:/etc/letsencrypt  <span class="comment"># 冒号左边可以改路径</span></span><br></pre></td></tr></table></figure><p>‍</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name npm \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">  -p 443:443 \</span><br><span class="line">  -p 81:81 \</span><br><span class="line">  -v /root/docker_data/npm/data:/data \</span><br><span class="line">  -v /root/docker_data/npm/etc/letsencrypt:/etc/letsencrypt \</span><br><span class="line">jc21/nginx-proxy-manager:latest</span><br></pre></td></tr></table></figure><p><strong>默认登陆名和密码：</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email:    admin@example.com</span><br><span class="line">Password: changeme</span><br></pre></td></tr></table></figure><p>‍</p><h2 id="SearXNG-（搜索引擎）"><a href="#SearXNG-（搜索引擎）" class="headerlink" title="SearXNG （搜索引擎）"></a>SearXNG （搜索引擎）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  redis:</span><br><span class="line">    container_name: redis</span><br><span class="line">    image: <span class="string">&quot;redis:alpine&quot;</span></span><br><span class="line">    <span class="built_in">command</span>: redis-server --save <span class="string">&quot;&quot;</span> --appendonly <span class="string">&quot;no&quot;</span></span><br><span class="line">    networks:</span><br><span class="line">      - searxng</span><br><span class="line">    tmpfs:</span><br><span class="line">      - /var/lib/redis</span><br><span class="line">    cap_drop:</span><br><span class="line">      - ALL</span><br><span class="line">    cap_add:</span><br><span class="line">      - SETGID</span><br><span class="line">      - SETUID</span><br><span class="line">      - DAC_OVERRIDE</span><br><span class="line"></span><br><span class="line">  searxng:</span><br><span class="line">    container_name: searxng</span><br><span class="line">    image: searxng/searxng:latest</span><br><span class="line">    networks:</span><br><span class="line">      - searxng</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8180:8080&quot;</span>   <span class="comment"># 这个冒号左边的端口可以更改，右边的不要改</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/docker_data/searxng:/etc/searxng</span><br><span class="line">    environment:</span><br><span class="line">      - SEARXNG_BASE_URL=https://search.example.com/</span><br><span class="line">    cap_drop:</span><br><span class="line">      - ALL</span><br><span class="line">    cap_add:</span><br><span class="line">      - CHOWN</span><br><span class="line">      - SETGID</span><br><span class="line">      - SETUID</span><br><span class="line">      - DAC_OVERRIDE</span><br><span class="line">    logging:</span><br><span class="line">      driver: <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      options:</span><br><span class="line">        max-size: <span class="string">&quot;1m&quot;</span></span><br><span class="line">        max-file: <span class="string">&quot;1&quot;</span></span><br><span class="line">networks:</span><br><span class="line">  searxng:</span><br><span class="line">    ipam:</span><br><span class="line">      driver: default</span><br></pre></td></tr></table></figure><h2 id="Minimalist-web-notepad-在线剪切板-x2F-笔记"><a href="#Minimalist-web-notepad-在线剪切板-x2F-笔记" class="headerlink" title="Minimalist-web-notepad(在线剪切板&#x2F;笔记)"></a>Minimalist-web-notepad(在线剪切板&#x2F;笔记)</h2><p><a href="https://github.com/pereorga/minimalist-web-notepad" rel="external nofollow noreferrer">pereorga&#x2F;minimalist-web-notepad</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8890:80 -v /mnt/notepad:/var/www/html/_tmp jdreinhardt/minimalist-web-notepad:latest</span><br></pre></td></tr></table></figure><p>反代</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> location / &#123;</span><br><span class="line">  proxy_pass http://127.0.0.1:8006/;</span><br><span class="line">  rewrite ^/(.*)$ /$1 break;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_set_header Host $host;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="aria2-pro"><a href="#aria2-pro" class="headerlink" title="aria2-pro"></a>aria2-pro</h2><ul><li><p>最基本的启动命令如下，你只需要完整替换<code>&lt;TOKEN&gt;</code>​字段(RPC密钥)即可启动。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --name aria2-pro \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    --log-opt max-size=1m \</span><br><span class="line">    --network host \</span><br><span class="line">    -e PUID=$UID \</span><br><span class="line">    -e PGID=$GID \</span><br><span class="line">    -e RPC_SECRET=&lt;TOKEN&gt; \</span><br><span class="line">    -e RPC_PORT=6800 \</span><br><span class="line">    -e LISTEN_PORT=6888 \</span><br><span class="line">    -v $PWD/aria2-config:/config \</span><br><span class="line">    -v $PWD/aria2-downloads:/downloads \</span><br><span class="line">    p3terx/aria2-pro</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="Duplicati-备份"><a href="#Duplicati-备份" class="headerlink" title="Duplicati (备份)"></a>Duplicati (备份)</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  duplicati:</span><br><span class="line">    image: lscr.io/linuxserver/duplicati</span><br><span class="line">    container_name: duplicati</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=<span class="number">0</span></span><br><span class="line">      - PGID=<span class="number">0</span></span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/duplicati/config:/config</span><br><span class="line">      - /root/data/docker_data/duplicati/backups:/backups</span><br><span class="line">      - /root/data:/source</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8080</span>:<span class="number">8200</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Microbin（剪切板）"><a href="#Microbin（剪切板）" class="headerlink" title="Microbin（剪切板）"></a>Microbin（剪切板）</h2><blockquote><p><a href="https://github.com/szabodanika/microbin" rel="external nofollow noreferrer">https://github.com/szabodanika/microbin</a></p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.5&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  microbin:</span><br><span class="line">    image: danielszabo99/microbin:latest</span><br><span class="line">    container_name: microbin</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - MICROBIN_HIGHLIGHTSYNTAX=true</span><br><span class="line">      - MICROBIN_HASH_IDS=true</span><br><span class="line">      - MICROBIN_EDITABLE=true</span><br><span class="line">      - MICROBIN_PRIVATE=false</span><br><span class="line">      - MICROBIN_HIDE_FOOTER=true</span><br><span class="line">      - MICROBIN_HELP=true</span><br><span class="line">   <span class="comment">#  - MICROBIN_FOOTER_TEXT=xxx</span></span><br><span class="line">      - MICROBIN_HIDE_HEADER=true</span><br><span class="line">      - MICROBIN_HIDE_LOGO=false</span><br><span class="line">      - MICROBIN_NO_ETERNAL_PASTA=true</span><br><span class="line">      - MICROBIN_NO_FILE_UPLOAD=false</span><br><span class="line">      - MICROBIN_NO_LISTING=true</span><br><span class="line">      - MICROBIN_THREADS=<span class="number">2</span></span><br><span class="line">      - MICROBIN_TITLE=free-bin</span><br><span class="line">      - MICROBIN_PUBLIC_PATH=https://example.com/    <span class="comment"># 记得改成自己的网址</span></span><br><span class="line">      - MICROBIN_QR=true</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8089</span>:<span class="number">8080</span>    <span class="comment"># 冒号左边可以改成自己需要的端口号</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /roor/data/docker_data/microbin-data:/app/pasta_data     <span class="comment"># 冒号左边可以改自己想要的挂载路径</span></span><br></pre></td></tr></table></figure><h2 id="‍ChatGPT"><a href="#‍ChatGPT" class="headerlink" title="‍ChatGPT"></a>‍ChatGPT</h2><p>选用服务器先测试一下是否可以访问ChatGPT：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://cpp.li/openai)</span><br></pre></td></tr></table></figure><h3 id="1-Chatgpt-web"><a href="#1-Chatgpt-web" class="headerlink" title="1. Chatgpt-web"></a>1. Chatgpt-web</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -p 3002:3002 \</span><br><span class="line">    -e OPENAI_API_KEY=sk-xxx \</span><br><span class="line">    -e  AUTH_SECRET_KEY=your-password \</span><br><span class="line">    --name chatgpt-web-2 \</span><br><span class="line">chenzhaoyu94/chatgpt-web:latest</span><br></pre></td></tr></table></figure><h3 id="2-Chatgpt-next-web"><a href="#2-Chatgpt-next-web" class="headerlink" title="2. Chatgpt-next-web"></a>2. Chatgpt-next-web</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -p 3000:3000 \</span><br><span class="line">    -e OPENAI_API_KEY=sk-xxxx \</span><br><span class="line">    -e CODE=your-password \</span><br><span class="line">    --name chatgpt-next-web \</span><br><span class="line">yidadaa/chatgpt-next-web:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用腾讯云 COS 同步思源笔记（S3 模式）</title>
      <link href="/siyuan-s3-cos.html"/>
      <url>/siyuan-s3-cos.html</url>
      
        <content type="html"><![CDATA[<p>前段时间思源开源了云同步功能，使其可以使用自己的对象储存来同步笔记，而我平时使用官方云同步时使用的空间和流量也不多，便想着使用腾讯云COS来同步笔记。（下图是我8个月使用的流量统计）</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f243c704.webp" alt="8个月使用的流量统计"></p><h4 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h4><ul><li>腾讯云账号</li><li>一个私有读写的<strong>COS储存桶</strong>（请记录该储存桶的访问域名，例如<code>https://siyuan-xxxxxx.cos.ap-guangzhou.myqcloud.com</code>​）</li><li>一对子用户的Key（有COS读写权限）。</li></ul><p>若不满足以上条件，请查看<a href="#%E6%AD%A5%E9%AA%A41%EF%BC%9A%E6%B3%A8%E5%86%8C%E8%85%BE%E8%AE%AF%E4%BA%91%E8%B4%A6%E5%8F%B7">注册腾讯云账号</a><br>若一切准备就绪，按下图填写表格即可。</p><table><thead><tr><th>Endpoint</th><th>这里填<code>https://cos.ap-guangzhou.myqcloud.com</code>​</th></tr></thead><tbody><tr><td>Access Key</td><td>这里填写子用户的 <strong>SecretId</strong>。</td></tr><tr><td>Secret Key</td><td>这里填写子用户的 <strong>SecretKey</strong>。</td></tr><tr><td>Bucket</td><td><code>siyuan-xxxxxx</code>​</td></tr><tr><td>Region</td><td><code>ap-guangzhou</code>​</td></tr></tbody></table><p>表中的 Endpoint、Bucket、Region都包含在该<strong>储存桶的访问域名</strong>中。</p><h4 id="步骤1：注册腾讯云账号"><a href="#步骤1：注册腾讯云账号" class="headerlink" title="步骤1：注册腾讯云账号"></a>步骤1：注册腾讯云账号</h4><p>（如果已在腾讯云注册，可忽略此步骤。）</p><p><a href="https://cloud.tencent.com/register?s_url=https://cloud.tencent.com/" rel="external nofollow noreferrer">点此注册腾讯云账号</a></p><h4 id="步骤2：完成实名认证"><a href="#步骤2：完成实名认证" class="headerlink" title="步骤2：完成实名认证"></a>步骤2：完成实名认证</h4><p>（如果已完成，可忽略此步骤。）</p><p><a href="https://console.cloud.tencent.com/developer" rel="external nofollow noreferrer">点此完成实名认证</a></p><p>详细认证流程，请参见 <a href="https://cloud.tencent.com/document/product/378/3629" rel="external nofollow noreferrer">实名认证介绍</a>。</p><h4 id="步骤3：准备子用户和访问密钥"><a href="#步骤3：准备子用户和访问密钥" class="headerlink" title="步骤3：准备子用户和访问密钥"></a>步骤3：准备子用户和访问密钥</h4><ol><li>在访问管理控制台的 <a href="https://console.cloud.tencent.com/cam/user/userType" rel="external nofollow noreferrer">新建用户</a> 页面中使用自定义创建新建一个用户</li><li>允许访问方式为<code>腾讯云控制台访问</code></li><li>下一步设置用户权限，搜索<code>COS</code>，给予所有相关访问权限</li><li>在用户列表中找到刚才创建的用户，在用户详情中新建密钥，并记录<strong>SecretId</strong> 和 <strong>SecretKey</strong>。</li></ol><h4 id="步骤4：开通-COS-服务"><a href="#步骤4：开通-COS-服务" class="headerlink" title="步骤4：开通 COS 服务"></a>步骤4：开通 COS 服务</h4><p><a href="https://console.cloud.tencent.com/cos5" rel="external nofollow noreferrer">点此开通 COS 服务</a>，创建一个<em>私有读写</em> 的储存桶，然后在储存桶概览中复制并记录<code>访问域名</code>。最后在储存桶<code>权限管理-储存桶访问权限</code>中添加刚才创建的子用户，权限为数据读取和写入。</p><p>最后，使用记录的信息<a href="#%E5%87%86%E5%A4%87">填写思源笔记S3同步的表格</a></p><blockquote><p>参考 <a href="https://cloud.tencent.com/document/product/436/41284" rel="external nofollow noreferrer">腾讯云 | 在兼容 S3 的第三方应用中使用 COS 的通用配置 </a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯云 </tag>
            
            <tag> S3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>脚本存档 （不定期更新）</title>
      <link href="/shell.html"/>
      <url>/shell.html</url>
      
        <content type="html"><![CDATA[<h2 id="云崽一键安装脚本（仅适用于Ubuntu）"><a href="#云崽一键安装脚本（仅适用于Ubuntu）" class="headerlink" title="云崽一键安装脚本（仅适用于Ubuntu）"></a>云崽一键安装脚本（仅适用于Ubuntu）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/wanyunr/package/main/script/yunzai_built_ubuntu.sh | bash</span><br></pre></td></tr></table></figure><h2 id="Acme-sh-域名证书一键申请脚本"><a href="#Acme-sh-域名证书一键申请脚本" class="headerlink" title="Acme.sh 域名证书一键申请脚本"></a>Acme.sh 域名证书一键申请脚本</h2><p>需要准备 CloudFlare Global API Key，CloudFlare的登录邮箱 和一枚在Cloudflare托管的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/wanyunr/package/main/script/acme1key.sh &amp;&amp; bash acme1key.sh</span><br></pre></td></tr></table></figure><h2 id="filebrowser一键安装"><a href="#filebrowser一键安装" class="headerlink" title="filebrowser一键安装"></a>filebrowser一键安装</h2><p>默认安装目录为<code>/</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/wanyunr/package/main/script/filebrowser.sh &amp;&amp; bash filebrowser.sh</span><br></pre></td></tr></table></figure><p><a href="https://github.com/wanyunr/package/wiki/#filebrowser%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" rel="external nofollow noreferrer">filebrowser一键安装脚本使用说明</a></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul><li>2023.02.06</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH 控制台配色的折腾</title>
      <link href="/peise.html"/>
      <url>/peise.html</url>
      
        <content type="html"><![CDATA[<p>今天在使用 Xshell 的连接 VPS 的时候，发现命令行 <code>ls</code> ​输出没有配色，就像这样</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f111867c.webp" alt="image">​</p><p>我记得有些 VPS 上面 <code>ls</code> ​输出是有配色的，就像这样</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f12e4d64.webp" alt="image">​</p><p>考虑到两台系统不同，便进行了再次测试，发现 Ubuntu 系统的机器都会有配色，而 Debian 的没有，出于美观和方便，我就想让 Debian 的机器也有配色，经过查验，是由于Debian缺少<code>.profile</code>和<code>.bashrc</code>配置，而我们可以使用<code>.bash_profile</code>配置获得类似效果，在经过一番折腾，得到了如下两种方案（其实区别不大）。</p><p>一<br><img src="https://blog.463333.xyz/blog/2024/04/660e9f148e9bf.webp" alt="image">​</p><p>二<br><img src="https://blog.463333.xyz/blog/2024/04/660e9f16a0381.webp" alt="image">​</p><p>使用演示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">登录需要增加配色的VPS，这里以root用户为例</span></span><br><span class="line">cd ~ </span><br><span class="line">方案一</span><br><span class="line">wget https://getfile.top/Documents/.bash_profile-Debain &amp;&amp; mv .bash_profile-Debain .bash_profile &amp;&amp; source ~/.bash_profile</span><br><span class="line">方案二</span><br><span class="line">wget https://getfile.top/Documents/.bash_profile-all &amp;&amp; mv .bash_profile-all .bash_profile &amp;&amp; source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>第一种是从 Ubuntu 的 VPS 中 <code>/root/.bashrc</code> 文件扒的，第二种是从网上找的（<a href="https://blog.csdn.net/weixin_43438052/article/details/108779449" rel="external nofollow noreferrer">出处</a>）。</p><p>大家看着用。</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Porl 短网址程序中文版安装</title>
      <link href="/porl.html"/>
      <url>/porl.html</url>
      
        <content type="html"><![CDATA[<p>本文用到的为Porl 2.3.0中文版，集成原版 <a href="https://github.com/cydrobolt/polr/" rel="external nofollow noreferrer">Porl</a> 2.3.0和 <a href="https://github.com/Glory-CNBoy/Porl-CHN" rel="external nofollow noreferrer">Glory-CNBoy&#x2F;Porl-CHN</a> 1.0.0 的中文翻译，文中有下载链接(如不信任可自行下载与替换)。</p><h3 id="一、安装准备"><a href="#一、安装准备" class="headerlink" title="一、安装准备"></a>一、安装准备</h3><ul><li><p>准备好VPS（默认已安装使用宝塔面板）</p></li><li><p>PHP &gt;&#x3D; 5.5.9</p></li><li><p>MySQL &gt;&#x3D; 5.5</p></li><li><p>准备好一个短域名</p></li></ul><h3 id="二、部署"><a href="#二、部署" class="headerlink" title="二、部署"></a>二、部署</h3><ol><li><p>首先创建一个网站<code>dwz.wanyunr.com</code> ，同时勾选创建数据库</p></li><li><p><img src="https://blog.463333.xyz/blog/2024/04/660e9efb2ba87.webp" alt="image-20221224161118628"></p></li><li><p>在控制台执行以下命令</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /www/wwwroot/dwz.wanyunr.com  #入网站根目录</span><br><span class="line">wget https://cloud.lkks.cc/f/vlsA/porl-2.3.0.zip   #下载文件</span><br><span class="line">unzip porl-2.3.0.zip  #解压文件</span><br><span class="line">cp .env.setup .env   #创建一个名为.env的副本，</span><br><span class="line">chmod -R 777 ./   #赋予权限，忽略&#x27;./.user.ini&#x27;: Operation not permitted 报错</span><br><span class="line">composer install --no-dev -o   #请确保已经安装了composer，如下图已安装</span><br></pre></td></tr></table></figure><p><img src="https://blog.463333.xyz/blog/2024/04/660e9efcaa867.webp" alt="image-20221224161406928"></p><ol start="3"><li><p>宝塔面板点击网站-设置-网站目录，选择<code>/public</code>文件夹</p></li><li><p>伪静态设置，还是在网站设置，伪静态中填入如下伪静态代码。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri/ /index.php$is_args$args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在最后访问<code>dwz.wanyunr.com</code>之前，<strong>请注意，</strong>你需要删除PHP的禁用函数：putenv()</li></ol><p><img src="https://blog.463333.xyz/blog/2024/04/660e9efe3fc8c.webp" alt="image-20221224155517563"></p><ol start="6"><li><p>访问<code>dwz.wanyunr.com</code>，填写相关信息即可。</p></li><li><p>最后，执行<code>chmod -R 755 ./</code></p></li><li><p>其他设置</p><ul><li>设置时区，在网站根目录的在<code>.env</code>文件的最后加入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">APP_TIMEZONE=Asia/Shanghai</span><br></pre></td></tr></table></figure><ul><li>若使用CF，请在<code>vender/autoload.php</code>的第<code>6</code>行加入如下代码：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_SERVER[&quot;HTTP_CF_CONNECTING_IP&quot;])) &#123;</span><br><span class="line">$_SERVER[&#x27;REMOTE_ADDR&#x27;] = $_SERVER[&quot;HTTP_CF_CONNECTING_IP&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加入后，即可获取获取真实IP</p></li></ol><h3 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h3><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f0115a9e.webp" alt="image-20221224160809181"></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f0270066.webp" alt="image-20221224165133835"></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9f03f0ac3.webp" alt="image-20221224161807540"></p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 短网址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OneinStack安装SSL报错 &quot;ssl_stapling&quot; ignored, issuer certificate not found for certificate</title>
      <link href="/ssl_error.html"/>
      <url>/ssl_error.html</url>
      
        <content type="html"><![CDATA[<h2 id="记一次-SSL-证书问题"><a href="#记一次-SSL-证书问题" class="headerlink" title="记一次 SSL 证书问题"></a>记一次 SSL 证书问题</h2><p>在  <a href="https://www.lookssl.com/" rel="external nofollow noreferrer">lookssl</a> 申请的 SSL 证书会产生三个文件，分别是：证书 <em>example.com.<strong>cert.crt</strong></em>​，证书链 <em>example.com.<strong>ca.crt</strong></em>，私钥 <em>example.com.<strong>key</strong></em>。</p><p>在有些地方可能只需要使用证书 <em>example.com.<strong>cert.crt</strong></em> 和 私钥<em>example.com.<strong>key</strong></em>即可。</p><p>但是在使用 OneinStack 安装自己的SSL证书时，只使用用上面两个文件会报错 <code>nginx: [warn] &quot;ssl_stapling&quot; ignored, issuer certificate not found for certificate &quot;/usr/local/nginx/conf/ssl/s.asas.asia.crt&quot;</code>，找不到证书颁发者证书</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9ef25a75d.webp" alt="image"></p><p>这个时候，就需要将 <em>example.com.<strong>ca.crt</strong></em> 文件中的内容全部复制到 <em>example.com.<strong>cert.crt</strong></em>的<strong>最后面，</strong>然后改名为 <em>example.com.<strong>crt</strong></em> ​即可上传使用了。</p><p>可能有人会问为什么不直接使用 Let’s Encrypt 的证书，因为我是 Only IPv6 的 VPS，在使用 Let’s Encrypt 获取证书的时候一堆莫名其妙的的问题 。</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
            <tag> OneinStack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些目录列表程序</title>
      <link href="/downapp.html"/>
      <url>/downapp.html</url>
      
        <content type="html"><![CDATA[<p><em>目录列表程序是一个简单的提供文件下载和浏览的程序，一般用来做下载站和简易网盘。本篇文章就来整理汇总一下优秀的目录列表程序，基本都是我使用过的。</em></p><h2 id="Zdir-3"><a href="#Zdir-3" class="headerlink" title="Zdir 3"></a>Zdir 3</h2><blockquote><p>项目地址：<a href="https://github.com/helloxz/zdir" rel="external nofollow noreferrer">https://github.com/helloxz/zdir</a></p><p>演示地址：<a href="http://soft.xiaoz.org/" rel="external nofollow noreferrer">http://soft.xiaoz.org</a></p></blockquote><p>之前需要依赖 PHP，不过最近<a href="https://github.com/helloz" rel="external nofollow noreferrer">作者</a>使用 Golang + Vue3 进行了重构，支持 Linux、Docker、Windows 部署。</p><p>优点</p><ul><li>MarkDown 预览</li><li>支持搜索当前目录与全局搜索</li><li>音&#x2F;视频预览（<code>.mp4</code>​​​及 <code>.m3u8</code>​​​）</li><li>图片预览</li><li>Office 在线预览</li><li>二维码生成</li><li>……</li></ul><p>缺点：</p><ul><li>在线文件管理不完善（如不能复制、移动等）</li><li>UI 丑了点（也不算缺点吧—2022.11）</li></ul><p><img src="https://blog.463333.xyz/blog/2024/04/660e9ed8e1c00.webp" alt="Screenshot_20221115_153118">​</p><h2 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a>Alist</h2><blockquote><p>官网地址：<a href="https://alist.nn.ci/" rel="external nofollow noreferrer">https://alist.nn.ci</a></p><p>演示地址：<a href="https://pan.nn.ci/" rel="external nofollow noreferrer">https://pan.nn.ci</a></p></blockquote><p>一个支持多种存储，支持网页浏览和 WebDAV 的文件列表程序，由 gin 和 Solidjs 驱动。</p><p>优点：​</p><ul><li>部署简单</li><li>支持多种存储</li><li>支持视频、音频、文档、PDF、图片预览等</li><li>支持所有 WebDAV 存储</li></ul><p>缺点：暂时没想到</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9eda76d36.webp" alt="image-20221120002026480"></p><h2 id="Zfile"><a href="#Zfile" class="headerlink" title="Zfile"></a>Zfile</h2><blockquote><p>官网地址：<a href="%E2%80%B8https://www.zfile.vip">https://www.zfile.vip</a></p><p>演示地址：<a href="%E2%80%B8https://demo.zfile.vip">https://demo.zfile.vip</a></p></blockquote><p>方便快捷的在线目录展示程序，支持将本地文件、FTP、SFTP、S3、OneDrive 等存储在网站上展示并浏览。</p><p>优点：</p><ul><li>支持多种储存策略</li><li>音&#x2F;视频预览</li><li>图片预览</li><li>Office 预览</li><li>支持直链</li><li>……</li></ul><p>缺点：</p><ul><li>需要Java环境</li><li>文件管理功能有，但比较弱</li></ul><p><img src="https://blog.463333.xyz/blog/2024/04/660e9edc2077e.webp" alt="image-20221120001557647"></p><p>‍</p><h2 id="TinyFileManager"><a href="#TinyFileManager" class="headerlink" title="TinyFileManager"></a>TinyFileManager</h2><p>优点：</p><ul><li>简洁，仅2个文件</li><li>多用户管理</li><li>完整的文件管理</li></ul><h2 id="Directory-Lister"><a href="#Directory-Lister" class="headerlink" title="Directory Lister"></a>Directory Lister</h2><blockquote><p>官网地址：<a href="https://www.directorylister.com/" rel="external nofollow noreferrer">https://www.directorylister.com</a><br />演示地址：<a href="https://demo.directorylister.com/" rel="external nofollow noreferrer">https://demo.directorylister.com</a></p></blockquote><p>优美极简的在线网盘，适合搭建一个简单的自用下载站。</p><p>优点：</p><ul><li>安装简单</li><li>明暗主题</li><li>自定义排序排序</li><li>文件搜索</li><li>markdown 渲染</li><li>Zip 下载（用于在单个操作中获取整个文件目录）</li></ul><p>缺点：无法上传直接文件</p><p>安装要求：PHP &gt;&#x3D; 7.4</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9edd99744.webp" alt="Screenshot_20221115_153238">​</p><p>‍</p><p>‍</p><h2 id="Filegator"><a href="#Filegator" class="headerlink" title="Filegator"></a>Filegator</h2><blockquote><p>项目地址：<a href="https://github.com/filegator/filegator" rel="external nofollow noreferrer">https://github.com/filegator/filegator</a><br>演示地址：<a href="https://demo.filegator.io/" rel="external nofollow noreferrer">https://demo.filegator.io</a></p></blockquote><p>优点：</p><ul><li>安装很方便，只要主机支持 PHP 即可</li><li>界面很简洁</li><li>在线文件管理，有基本的上传、下载、解压、压缩、移动、拷贝、删除功能</li><li>支持本地存储和远程存储：FTP, Amazon S3, Dropbox 等</li><li>可以设置多用户，每个用户不同权限的设定。（管理员可以看到所有文件）</li></ul><p>缺点：</p><ul><li>仅支持在线浏览图片，其它的文件只能是下载</li><li>用户目录只能选择一个文件夹</li><li>无法获取直链</li></ul><p>安装要求：PHP 7.2.5+ (带 php-zip 拓展）</p><p>‍<img src="https://blog.463333.xyz/blog/2024/04/660e9edf14119.webp" alt="image-20221120001951124"></p><h2 id="Filebrowser"><a href="#Filebrowser" class="headerlink" title="Filebrowser"></a>Filebrowser</h2><blockquote><p>官网地址：<a href="https://filebrowser.org/" rel="external nofollow noreferrer">https://filebrowser.org</a></p></blockquote><p>没用过，不做评价</p><p>官方简介：</p><blockquote><p>File Browser is a <strong>create-your-own-cloud-kind</strong> of software where you can install it on a server, direct it to a path and then access your files through a nice web interface. You have many available features!</p><p>文件浏览器是一种<strong>创建您自己的云</strong>的软件，您可以在其中将其安装在服务器上，将其定向到一个路径，然后通过一个漂亮的 Web 界面访问您的文件。 你有很多可用的功能！</p></blockquote><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
            <tag> 目录程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客换了Butterfly主题</title>
      <link href="/theme.html"/>
      <url>/theme.html</url>
      
        <content type="html"><![CDATA[<p>因为想去掉首页Top图，然后去找<a href="https://blinkfox.github.io/" rel="external nofollow noreferrer">Matery</a>的官方文档。</p><p>因为首页都有Top图，我就看走眼了，看来半天<a href="https://butterfly.js.org/" rel="external nofollow noreferrer">Butterfly</a>的文档，准备动手改的时候才发现不对，感觉Butterfly主题也非常不错，我就干脆换主题试一试。</p><p>然后一晚上就没了（哭），我的数据也没了(虽然没多少)</p><p>但是看到自己的博客焕然一新，一切还是值得的。</p>]]></content>
      
      
      <categories>
          
          <category> 博客历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS常用脚本</title>
      <link href="/sh.html"/>
      <url>/sh.html</url>
      
        <content type="html"><![CDATA[<ol><li>更新：20230215</li></ol><p>更多请移步 <a href="https://docs.wanyunr.com/" rel="external nofollow noreferrer">晚云文档</a></p><h1 id="⚒-常用脚本"><a href="#⚒-常用脚本" class="headerlink" title="⚒ 常用脚本"></a>⚒ 常用脚本</h1><h2 id="面板"><a href="#面板" class="headerlink" title="面板"></a>面板</h2><h4 id="哪吒探针：一款便携服务器状态监控面板"><a href="#哪吒探针：一款便携服务器状态监控面板" class="headerlink" title="哪吒探针：一款便携服务器状态监控面板"></a>哪吒探针：一款便携服务器状态监控面板</h4><p>海外安装下载地址：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh  -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./nezha.sh</span><br></pre></td></tr></table></figure><p>国内安装下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://jihulab.com/nezha/nezha/-/raw/master/script/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo CN=true ./nezha.sh</span><br></pre></td></tr></table></figure><h4 id="mdserver-web"><a href="#mdserver-web" class="headerlink" title="mdserver-web"></a><a href="https://github.com/midoks/mdserver-web" rel="external nofollow noreferrer">mdserver-web</a></h4><ul><li>初始安装</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/install.sh | bash</span><br></pre></td></tr></table></figure><ul><li>更新</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/update.sh | bash</span><br></pre></td></tr></table></figure><ul><li>卸载脚本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/uninstall.sh | bash</span><br></pre></td></tr></table></figure><h2 id="主机工具"><a href="#主机工具" class="headerlink" title="主机工具"></a>主机工具</h2><h3 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h3><ol><li>BlueSkyXN 综合工具箱</li></ol><p><a href="https://github.com/BlueSkyXN/SKY-BOX" rel="external nofollow noreferrer">https://github.com/BlueSkyXN/SKY-BOX</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; chmod +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure><ol start="2"><li><pre><code>Misaka Linux Toolbox<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>wget -N --no-check-certificate https://raw.githubusercontents.com/tpe28/MisakaLinuxToolbox/master/MisakaToolbox.sh &amp;&amp; bash MisakaToolbox.sh<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 挂载硬盘</span><br><span class="line"></span><br><span class="line">1. 脚本（来自宝塔）</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">wget -O auto_disk.sh http://download.bt.cn/tools/auto_disk.sh &amp;&amp; bash auto_disk.sh  #默认挂载到 /www</span><br></pre></td></tr></table></figure></code></pre></li><li><p>脚本（来自oneinstack）</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.linuxeye.com/scripts/auto_fdisk.sh</span><br><span class="line">chmod +x ./auto_fdisk.sh</span><br><span class="line">./auto_fdisk.sh</span><br></pre></td></tr></table></figure><p>如果操作过程中遭遇异常退出，再次运行时，可能会提示：The script is already exist, please next time to run this script，这个时候，需要执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /tmp/.auto_fdisk.sh</span><br></pre></td></tr></table></figure><ol start="3"><li>脚本</li></ol><p><a href="https://blog.csdn.net/HYXRX/article/details/114366675" rel="external nofollow noreferrer">blog.csdn.net</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/bash/sh</span><br><span class="line">echo &quot;请输入所挂盘目标地址!(示例:/dev/xxx)&quot;</span><br><span class="line">read -p &quot;地址:&quot; o</span><br><span class="line">echo &quot;请输入所要挂载的地址!(示例:/xxx)&quot;</span><br><span class="line">read -p &quot;地址:&quot; p</span><br><span class="line">sleep 3s</span><br><span class="line">cd $p &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">       echo &quot;挂载地址存在!&quot;</span><br><span class="line">else</span><br><span class="line">       echo &quot;挂载地址已创建!&quot; | sudo mkdir $p</span><br><span class="line">fi</span><br><span class="line">sleep 2s</span><br><span class="line">sudo mkfs.ext4 -F $o &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class="line">sleep 3s</span><br><span class="line">echo &quot; $o $p ext4 defaults 0 0 &quot; | sudo tee -a /etc/fstab &amp;&amp; echo &quot; $p &quot; |sudo tee 1.txt</span><br><span class="line">sleep 3s</span><br><span class="line">sudo mount -a</span><br><span class="line">b=`sed &#x27;s#/# #g&#x27; 1.txt`</span><br><span class="line">a=`df -h|grep /dev/sdb|awk &#x27;&#123;print $6&#125;&#x27;|sed &#x27;s#/# #g&#x27;`</span><br><span class="line">if [ $a = $b ];then</span><br><span class="line">        echo &quot; $p 挂载成功! &quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot; $p 挂载失败! &quot;</span><br><span class="line">fi</span><br><span class="line">sleep 2s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="开启BBR"><a href="#开启BBR" class="headerlink" title="开启BBR"></a>开启BBR</h3><ol><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://down.907777.xyz/Script/vps/install_kernel.sh &amp;&amp; chmod +x ./install_kernel.sh &amp;&amp; ./install_kernel.sh</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/jinwyp/one_click_script/master/install_kernel.sh &amp;&amp; chmod +x ./install_kernel.sh &amp;&amp; ./install_kernel.sh</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -Lso- https://git.io/kernel.sh)</span><br></pre></td></tr></table></figure><ol start="2"><li>（推荐）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O tcpx.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcpx.sh&quot; &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh</span><br></pre></td></tr></table></figure><h3 id="流媒体测试"><a href="#流媒体测试" class="headerlink" title="流媒体测试"></a>流媒体测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://git.io/JRw8R)</span><br></pre></td></tr></table></figure><h3 id="VPS-测试"><a href="#VPS-测试" class="headerlink" title="VPS 测试"></a>VPS 测试</h3><ol><li>yabs</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- yabs.sh | bash</span><br></pre></td></tr></table></figure><ol start="2"><li>bench.sh</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><ol><li>萌咖大佬</li></ol><p>甲骨文、三毛、Vir、RN 等大部分 VPS 通用，三毛、甲骨文 记得去掉 -firmware</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -d 11 -v 64 -p Abc123 -port 22 -a</span><br><span class="line"></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -u 20.04 -p Abc123. -port 29960 -a</span><br></pre></td></tr></table></figure><p><a href="https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh" rel="external nofollow noreferrer">参数说明</a> - 42行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -d 11 -v 64 -p 密码 -port 端口 -a -firmware</span><br></pre></td></tr></table></figure><p>Q：如果出现无法安装Docker报错E: Malformed entry 1 in list file &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list (Component)，执行rm &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list即可。</p><ol start="2"><li><a href="https://git.beta.gs/" rel="external nofollow noreferrer"><strong>beta.gs</strong></a></li></ol><p>一键 DD 脚本，支持性好，更智能更全面，支持国内外各种 VPS 重装，特别是对国内各种访问国外资源慢的 VPS 安装有奇效。</p><p>安装重装系统的前提组件:</p><p>Debian&#x2F;Ubuntu:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y xz-utils openssl gawk file wget screen &amp;&amp; screen -S os</span><br></pre></td></tr></table></figure><p>RedHat&#x2F;CentOS:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y xz openssl gawk file glibc-common wget screen &amp;&amp; screen -S os</span><br></pre></td></tr></table></figure><p>使用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O NewReinstall.sh https://git.io/newbetags &amp;&amp; chmod a+x NewReinstall.sh &amp;&amp; bash NewReinstall.sh</span><br></pre></td></tr></table></figure><p>如为 CN 主机 (部分主机商已不能使用)，可能出现报错或不能下载脚本的问题，可执行以下命令开始安装.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O NewReinstall.sh https://cdn.jsdelivr.net/gh/fcurrk/reinstall@master/NewReinstall.sh &amp;&amp; chmod a+x NewReinstall.sh &amp;&amp; bash NewReinstall.sh</span><br></pre></td></tr></table></figure><p>点击使用<a href="https://git.beta.gs/index.php/8.html" rel="external nofollow noreferrer">旧版脚本</a></p><ol start="3"><li>leitbogioro</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh &#x27;https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh&#x27; &amp;&amp; chmod a+x InstallNET.sh | bash </span><br></pre></td></tr></table></figure><p>参数详情：<br>-debian 9&#x2F;10&#x2F;11 : Debian 9+<br>-centos 7&#x2F;8&#x2F;9-stream: CentOS 7+<br>-almalinux&#x2F;alma 8&#x2F;9: AlmaLinux 8+<br>-rockylinux&#x2F;rocky 8&#x2F;9: RockyLinux 8+<br>-fedora 34&#x2F;35&#x2F;36&#x2F;37: Fedora 34+<br>-ubuntu 16.04&#x2F;18.04&#x2F;20.04: Ubuntu 16.0420.04 -mirror “有效的源链接” -port “165535”<br>-pwd ‘自定义密码，不可太复杂，不推荐带特殊符号，默认：LeitboGi0ro’<br>--network “dhcp&#x2F;auto or static&#x2F;manual” 动态或静态网络，可选，可不添加，脚本自动识别<br>带两个横杠的参数应该放在脚本运行最后面</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="Aria2"><a href="#Aria2" class="headerlink" title="Aria2"></a>Aria2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N git.io/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; ./aria2.sh</span><br></pre></td></tr></table></figure><h3 id="CCAA"><a href="#CCAA" class="headerlink" title="CCAA"></a>CCAA</h3><blockquote><p><a href="https://github.com/helloxz/ccaa" rel="external nofollow noreferrer">一键安装Aria2 + AriaNg + FileBrowse</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lsk https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh)</span><br></pre></td></tr></table></figure><h3 id="Node-js一键安装"><a href="#Node-js一键安装" class="headerlink" title="Node.js一键安装"></a>Node.js一键安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p>安装不同版本的Node.js，替换setup_14.x为想要的setup_16.x即可</p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TinyFileManager文件管理器的简化、安装和调试</title>
      <link href="/8.html"/>
      <url>/8.html</url>
      
        <content type="html"><![CDATA[<p><strong>下面部分内容已失效，最新内容请访问</strong></p><blockquote><p>Github：<a href="https://github.com/wanyunr/tinyfilemanager" rel="external nofollow noreferrer">https://github.com/wanyunr/tinyfilemanager</a></p><p>Gitee：<a href="https://gitee.com/wanyunr/tinyfilemanager" rel="external nofollow noreferrer">https://gitee.com/wanyunr/tinyfilemanager</a></p></blockquote><h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><p>TinyFileManager 是基于PHP 的Web文件管理器，它是一个简单、快速和小型的文件管理器，具有单个文件、多语言就绪的 Web 应用程序，用于通过 Web 浏览器在线存储、上传、编辑和管理文件和文件夹。</p><hr><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><hr><p>安装要求：PHP 5.5.0 或更高版本。</p><p>1、我们在宝塔面板新建一个网站（只要创建一个网站即可），将下载好的 Tiny File Manager 最新版本解压后上传到网站根目录，将<code>tinyfilemanager</code>改为<code>index.php</code>。接下来，你就可以访问你的网站了。</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e7916f41.webp">​</p><h3 id="三、修改密码"><a href="#三、修改密码" class="headerlink" title="三、修改密码"></a>三、修改密码</h3><p>TinyFileManager 密码使用 password_hash（）算出来的，可以在文件 config.php 文件中的 29 行左右查看和修改。password_hash（）密码生成的官方地址 <a href="https://tinyfilemanager.github.io/docs/pwd.html" rel="external nofollow noreferrer">https://tinyfilemanager.github.io/docs/pwd.html</a>。这个地址国内基本打不开，这里可以使用网友的一个生成密码的地址：<a href="https://www.alichaxun.com/php_hash" rel="external nofollow noreferrer">https://www.alichaxun.com/php_hash</a></p><p>默认用户管理员：<code>admin</code><br>默认管理员密码：<code>admin123</code></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e7aeaf69.webp"></p><p>‍</p><hr><h2 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h2><p>1、这一步非常重要。原因：代码中含有 google 的 js 库，这在国内无法访问，会导致设置功能等不可用。在 index.php 中，搜索以下两个名称将链接替换为可访问的公共库链接：</p><p>1)、jquery.slim.min.js 的 js 链接为 “<code>https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.slim.min.js</code>”<br>2)、jquery.min.js 的 js 链接为 “<code>https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js</code>”</p><p>修改完后保存。</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e7db2612.webp">​</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e7f96143.webp">​</p><p><strong>2、将默认文件目录修改为</strong><code>/file</code></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e813e932.webp" alt="image">​</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e82af703.webp" alt="image">​</p><p>这样登录网站后，就会直接进入到 file 文件夹了</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e8446786.webp">​</p><p><strong>3、修复直链问题。</strong>修改完根目录后，直链按钮和预览按钮的链接要进行修复。</p><p>在 index.php 文件（修改前是 tinyfilemanager.php）中搜索 <code>FM_ROOT_URL</code> . 在类似如图的后面加上 <code>&#39;files&#39; .</code> 即可。</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e86b8f56.webp" alt="image">​</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e88b99f9.webp" alt="image">​</p><p>修改完之后，Web 管理页面上的编辑、删除、重命名和预览即可正常使用。</p><blockquote><p>参考文章 <a href="https://www.inqingdao.cn/6830.html" rel="external nofollow noreferrer">www.inqingdao.cn</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux上使用宝塔面板安装 iFileSpace</title>
      <link href="/7.html"/>
      <url>/7.html</url>
      
        <content type="html"><![CDATA[<p>官方教程：<a href="https://ifile.space/docs" rel="external nofollow noreferrer">https://ifile.space/docs</a></p><p>视频教程：<a href="https://www.bilibili.com/video/BV1aQ4y167j1/?vd_source=3c0ccbc131e2239abbf7dbb726698f40" rel="external nofollow noreferrer">https://www.bilibili.com/video/BV1aQ4y167j1/?vd_source&#x3D;3c0ccbc131e2239abbf7dbb726698f40</a></p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>一、 下载服务的文件到网址目录<br>​<img src="https://blog.463333.xyz/blog/2024/04/660e9e05a4c5a.webp" alt="image">​</p><p>二、进入网址目录后打开终端</p><p>三、执行启动命令：<code>./ifile &amp;</code></p><p>四、添加站点，目录选刚才文件所在的位置，可选 MySQL，PHP 使用纯静态。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在网站设置中添加反向代理</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//172.0.0.1:3030</span></span><br></pre></td></tr></table></figure><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e078b3c7.webp" alt="image">​</p><p>然后再 Nginx 反向代理需要在配置文件添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br></pre></td></tr></table></figure><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e096db40.webp" alt="image">​</p><p>‍</p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐两个私有云方案及其搭建教程</title>
      <link href="/6.html"/>
      <url>/6.html</url>
      
        <content type="html"><![CDATA[<p>今天我推荐两个比较好用的私人网盘：Cloudreve和iFlieSpace。</p><p>Cloudreve：如果你需要一个相对简单的网盘，这个挺适合，强大的离线下载功能，支持七牛云等第三方云存储，支持视频音频文档等文件的在线预览，响应式的设计使得在移动设备上也有良好的阅读体验。</p><p>优点：可以导入文件到自己的空间中（不额外占用空间），支持WebDAV。</p><p>缺点：免费版不支持一个人使用多个储存策略，暂时只有iOS的客户端。</p><p>Iflie：IFILE 是一个在线个人文件管理工具，在线网盘程序， 支持本地存储和对象存储（目前已经支持国内大部分对象存储，同时也有OneDrive）, 如部署在公网服务器，可替代百度网盘等在线网盘，自主搭建，数据完全自主管理！也可部署在家庭软路由、nas等个人存储设备中，作为局域网文件管理工具使用。支持多用户、多存储空间、及精细的权限管理。</p><p>优点：支持一个人使用多个储存策略，且部署极其简单。</p><p>缺点：UI有待优化，网页版没有适配移动端（不过有App）。</p><p><strong>以下教程都基于Linux宝塔面板</strong></p><h2 id="Cloudreve"><a href="#Cloudreve" class="headerlink" title="Cloudreve"></a>Cloudreve</h2><blockquote><p>官方文档 <a href="https://docs.cloudreve.org/getting-started/install" rel="external nofollow noreferrer">docs.cloudreve.org</a></p></blockquote><h3 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h3><hr><ul><li>运行环境：Nginx&#x2F;Apache</li><li>PHP：无要求</li><li>数据库：可有可无</li><li>进程保护程序：Supervisor 管理器</li></ul><h3 id="创建站点"><a href="#创建站点" class="headerlink" title="创建站点"></a>创建站点</h3><p>数据库可以使用也可以不使用。因为数据库不是必需的。安装好之后可以在配置文件选择是否使用数据库的。php 版本选静态也是可以的。没有特殊要求。</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9dd4d4d0a.webp" alt="image-20220825134537859"></p><hr><h3 id="下载部署"><a href="#下载部署" class="headerlink" title="下载部署"></a>下载部署</h3><p>下载压缩包，你可以在 <a href="https://github.com/cloudreve/Cloudreve/releases" rel="external nofollow noreferrer">GitHub Release</a> 页面获取已经构建打包完成的主程序。其中每个版本都提供了常见系统架构下可用的主程序，命名规则为 cloudreve_版本号_操作系统_CPU 架构. tar.gz。比如，普通 64 位 Linux 系统上部署 3.0.0 版本，则应该下载 cloudreve_3.0.0_linux_amd64.tar.gz。放在网站根目录解压，一般是单独的一个文件（cloudreve）。</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9dd640006.webp"></p><p>解压压缩包，把程序放在网站目录。</p><h3 id="部署-ssl-证书"><a href="#部署-ssl-证书" class="headerlink" title="部署 ssl 证书"></a>部署 ssl 证书</h3><p>在此之前建议先把 ssl 证书申请一下，之后要设置反向代理。如果先设置了代理，申请SSL的时候必须要删除反代理才能申请成功，比较麻烦。</p><h3 id="安装-Supervisor-管理器​"><a href="#安装-Supervisor-管理器​" class="headerlink" title="安装 Supervisor 管理器​"></a>安装 Supervisor 管理器​</h3><p>Supervisor 管理器页面</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9dd87729e.webp">​</p><p>添加守护进程</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9dda13462.webp">​</p><p>运行成功</p><h3 id="开启反向代理"><a href="#开启反向代理" class="headerlink" title="开启反向代理"></a>开启反向代理</h3><p>默认是 5212 端口。</p><p>反向代理</p><p>编辑反向代理配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_pass http://127.0.0.1:5212;</span><br><span class="line"></span><br><span class="line">    # 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸</span><br><span class="line">    # client_max_body_size 20000m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog.463333.xyz/blog/2024/04/660e9ddbb7b54.webp">​</p><p>反向代理配置</p><h3 id="获取初始化账号密码"><a href="#获取初始化账号密码" class="headerlink" title="获取初始化账号密码"></a>获取初始化账号密码</h3><p><img src="https://blog.463333.xyz/blog/2024/04/660e9ddd8297a.webp">​</p><p>初始化账号密码</p><p>现在访问域名就可以啦。</p><h2 id="iFileSpace"><a href="#iFileSpace" class="headerlink" title="iFileSpace"></a>iFileSpace</h2><p><strong>更新了一下，详细请见<a href="https://blog.basfree.com.7.html/" rel="external nofollow noreferrer">在Linux上使用宝塔面板安装 iFileSpace</a></strong></p><blockquote><p>官方文档：<a href="https://ifile.space/docs" rel="external nofollow noreferrer">https://ifile.space/docs</a></p><p>视频教程：<a href="https://www.bilibili.com/video/BV1aQ4y167j1/?vd_source=3c0ccbc131e2239abbf7dbb726698f40" rel="external nofollow noreferrer">https://www.bilibili.com/video/BV1aQ4y167j1/?vd_source&#x3D;3c0ccbc131e2239abbf7dbb726698f40</a></p></blockquote><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>一. <a href="https://ifile.space/download" rel="external nofollow noreferrer">下载文件</a>后进入目录</p><p>二. 启动：<code>./ifile &amp;</code></p><p>默认监听端口为:3030（启动一次后可在生成的配置文件中修改端口），首次运行会要求初始化系统，浏览器打开 <a href="http://127.0.0.1:3030/" rel="external nofollow noreferrer">http://127.0.0.1:3030</a> ，在页面中进行初始化操作。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Nginx 反向代理需要在配置文件添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br></pre></td></tr></table></figure><p>end!!!</p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用又拍云CDN给hexo博客加速详细设置</title>
      <link href="/5.html"/>
      <url>/5.html</url>
      
        <content type="html"><![CDATA[<p>因为国内 GitHub 访问实在慢，便开始捣鼓给网站 CDN 加速。期间踩了不少坑，比如不正当设置导致访问时显示 ，或者是网站显示不安全，特此记录。</p><ol><li><p>创建 CND 服务</p></li><li><p>加速域名填你需要加速的网站，这里假设为 <code>www.xxx.com</code>（一定要在国内备案）</p></li><li><p>源站填写 <code>&lt;user&gt;.github.io</code>，回源协议选<strong>跟随</strong></p></li><li><p>在域名控制台将又拍云 CDN 提供的 CNAME 解析到你的网站</p><ol><li>主机记录填 <code>www</code></li><li>记录类型选 CNAME</li><li>记录值为又拍云提供的 CNAME</li><li>保存，然后删除之前设置的 <code>www</code> 指向 GitHub 的解析记录</li></ol></li><li><p>CDN 功能配置</p><ol><li>开启智能压缩和页面压缩</li><li>HTTPS 选择 HTTPS 访问，证书可以申请免费的 Let’s Encrypt DV SSL 单域名证书（直接在又拍云申请），打开强制 HTTPS</li><li>打开 TLS 1.3</li><li>打开 WebP 自适应</li><li>其他的可以开启防盗链、ip 限制和 cc 防护等功能</li></ol></li><li><p>踩坑</p><ol><li><p>访问显示 TOO_MANY_REDIRECTS , -310（重定向次数太多）</p><p>具体怎么解决的我现在不太清楚，应该是 https 协议的问题，我打开 GitHub page 的 HTTPS 访问后解决了</p></li><li><p>显示网站不安全</p><p>在给又拍云 CDN 申请 SSL 证书，同时打开 GitHub page 的 HTTPS 访问后也解决了 🤣</p></li></ol></li><li><p>完事</p></li></ol><p>同时提醒，如果使用又拍云的云储存。记得一定要开 HTTPS，否则图片会无法显示。踩坑 +1</p><p><em>方法仅供参考，毕竟我也还在不断努力学习中</em></p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window 10 解决文件夹属性没有安全等选项</title>
      <link href="/4.html"/>
      <url>/4.html</url>
      
        <content type="html"><![CDATA[<p>此方案用于解决win 10 家庭版，没有本地组策略编辑器以及取消勾选<strong>使用共享导向</strong>（如下图）无效的情况</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9eb29da2b.webp"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> Windows Registry Editor Version 5.00</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers]</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\Sharing]</span><br><span class="line"> @=&quot;&#123;f81e9010-6ea4-11ce-a7ff-00aa003ca9f6&#125;&quot;</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\&#123;1F2E5C40-9550-11CE-99D2-00AA006E086C&#125;]</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\&#123;596AB062-B4D2-4215-9F74-E9109B0A8153&#125;]</span><br><span class="line"> @=&quot;&quot;</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\&#123;ECCDF543-45CC-11CE-B9BF-0080C87CDBA6&#125;]</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\&#123;ef43ecfe-2ab9-4632-bf21-58909dd177f0&#125;]</span><br><span class="line"> @=&quot;&quot;</span><br><span class="line">  </span><br><span class="line"> [HKEY_CLASSES_ROOT\Directory\shellex\PropertySheetHandlers\&#123;4a7ded0a-ad25-11d0-98a8-0800361b1103&#125;]</span><br><span class="line"> @=&quot;&quot;</span><br></pre></td></tr></table></figure><p><strong>将文件命名为 1.reg  然后双击就可以了</strong></p><p>或者<a href="https://wwb.lanzoub.com/iaahP07u9kre" rel="external nofollow noreferrer">点击下载</a></p><p>参考文章： <a href="https://blog.csdn.net/m0_55983719/article/details/123274148" rel="external nofollow noreferrer">blog.csdn.net</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window中使用Hexo与Github搭建个人博客</title>
      <link href="/3.html"/>
      <url>/3.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装-Hexo及配置环境"><a href="#安装-Hexo及配置环境" class="headerlink" title="安装 Hexo及配置环境"></a>安装 Hexo及配置环境</h3><p>推荐官方文档 <a href="https://hexo.io/zh-cn/docs/" rel="external nofollow noreferrer">https://hexo.io/zh-cn/docs/</a></p><p>node.js 环境配置教程推荐阅读<a href="https://blog.basfree.com.2.html/" rel="external nofollow noreferrer">node.js安装及环境配置教程</a></p><h3 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h3><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><h5 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h5><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li>Repository name 中输入 <code>用户名.github.io</code></li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li></ul><p>填好后点击 Create repository 创建。</p><h5 id="本地安装插件"><a href="#本地安装插件" class="headerlink" title="本地安装插件"></a>本地安装插件</h5><p>首先 <strong>安装 hexo-deployer-git</strong> ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><h5 id="绑定域名-可选"><a href="#绑定域名-可选" class="headerlink" title="绑定域名(可选)"></a>绑定域名(可选)</h5><p>博客搭建完成使用的是 GitHub 的子域名（用户名.<a href="https://qi07.xyz/" rel="external nofollow noreferrer">http:&#x2F;&#x2F;<strong>github.io</strong></a>），我们可以为 Hexo 博客绑定自己的域名替换 GitHub 域名，更加个性化和专业，也利于 SEO。</p><h3 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h3><h5 id="官方主题市场"><a href="#官方主题市场" class="headerlink" title="官方主题市场"></a>官方主题市场</h5><p><a href="https://hexo.io/themes/" rel="external nofollow noreferrer">https://hexo.io/themes/</a></p><h4 id="推荐主题"><a href="#推荐主题" class="headerlink" title="推荐主题"></a>推荐主题</h4><h6 id="matery"><a href="#matery" class="headerlink" title="matery"></a>matery</h6><p><a href="https://gitee.com/yafine66/hexo-theme-matery" rel="external nofollow noreferrer">https://gitee.com/yafine66/hexo-theme-matery</a></p><h6 id="butterfly"><a href="#butterfly" class="headerlink" title="butterfly"></a>butterfly</h6><p><a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D" rel="external nofollow noreferrer">https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D</a></p><p>美化教程<a href="%E2%80%B8https://blog.csdn.net/kuashijidexibao/article/details/112971657">https://blog.csdn.net/kuashijidexibao/article/details/112971657</a>，中间有些模块似乎不可以用。</p><h6 id="icarus"><a href="#icarus" class="headerlink" title="icarus"></a>icarus</h6><p><a href="https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/" rel="external nofollow noreferrer">https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js安装及环境配置教程</title>
      <link href="/2.html"/>
      <url>/2.html</url>
      
        <content type="html"><![CDATA[<h2 id="Step1：下载安装包"><a href="#Step1：下载安装包" class="headerlink" title="Step1：下载安装包"></a>Step1：下载安装包</h2><p><a href="https://nodejs.org/zh-cn/download/" rel="external nofollow noreferrer">https://nodejs.org/zh-cn/download/</a></p><p>根据自己电脑系统及位数选择，我的电脑是Windows系统、64位、想下载稳定版的.msi（LTS为长期稳定版）这里选择<code>windows64位.msi</code>格式安装包。</p><p>下载方式1：<a href="https://nodejs.org/zh-cn/download/" rel="external nofollow noreferrer">官网下载页进行下载</a></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e190a592.webp"></p><p>下载方式2：<a href="https://nodejs.org/zh-cn/" rel="external nofollow noreferrer">官网首页直接下载</a></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e1a98453.webp"></p><h2 id="Step2：安装程序"><a href="#Step2：安装程序" class="headerlink" title="Step2：安装程序"></a>Step2：安装程序</h2><p>①下载完成后，双击安装包，开始安装，使用默认配置安装一直点<code>next</code>即可，安装路径默认在<code>C:Program Files</code>下，也可以自定义修改</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e1c1654c.webp"></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e1dba625.webp"></p><p>②安装路径默认在C:Program Files下面，也能够自定义修改，而后点击next（我这里设置我的安装目录为<code>E:KF ode.js</code> 根据自己的需要进行更改。）</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e1ec7747.webp"></p><p>③下图根据本身的需要进行，我选择了默认<code>Node.js runtime</code>，而后<code>Next</code></p><ul><li><code>Node.js runtime</code> ：表示运行环境</li><li><code>npm package manager</code>：表示npm包管理器</li><li><code>online documentation shortcuts</code> ：在线文档快捷方式</li><li><code>Add to PATH</code>：添加到环境变量</li></ul><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e205658e.webp"></p><p>④以下图框中所示，我没有选中，而是直接next</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e226d563.webp"></p><p>⑤点击Install，进行安装</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e23da9a0.webp"></p><p>⑥点击finish，完成安装</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e252cc14.webp"></p><p>⑦安装完成后，.msi格式的安装包已经将<a href="https://so.csdn.net/so/search?q=node&spm=1001.2101.3001.7020" rel="external nofollow noreferrer">node</a>启动程序添加到系统环境变量path中,咱们能够查看系统变量进行验证：在【个人电脑】右键→【属性】→【高级系统设置】</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e26b977f.webp"></p><p>⑧点击【高级】→【环境变量】</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e2870780.webp"></p><p>⑨在系统变量中查看【path】，点击【编辑】</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e2a36e1e.webp"></p><p>⑩会发现.msi格式的安装包已经将node启动程序添加到系统环境变量path中</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e2c19aa6.webp"></p><h2 id="Step3：查看"><a href="#Step3：查看" class="headerlink" title="Step3：查看"></a>Step3：查看</h2><p>① 既然已经将node程序添加到全局系统变量中，把咱们能够直接在CMD窗口中任意位置执行node，打开CMD窗口，执行命令<code>node -v</code>查看node版本</p><p>【注意：此时是打开CMD窗口，并非在C:Program Files odejs目录下执行node.exe】</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e2d8114a.webp"></p><p>② 最新版的node在安装时同时也安装了npm,执行<code>npm -v</code>查看npm版本</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e2eb16a1.webp"></p><p>③ 默认状况下，咱们在执行npm install -g XXXX时，下载了一个全局包，这个包的默认存放路径C:UsersAdministratorAppDataRoaming pm ode_modules下，能够经过CMD指令<code>npm root -g</code>查看</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e3036945.webp"></p><p>⑤ 一部分经常使用的命令，以下：</p><blockquote><ul><li>npm -v：查看npm安装的版本。</li><li>npm init：会引导你建立一个package.json文件，包括名称、版本、作者等信息。</li><li>npm list：查看当前目录下已安装的node包。</li><li>npm ls：查看当前目录下已安装的node包。</li><li>npm install moduleNames：安装Node模块到本地目录node_modules下。</li><li>npm install &lt; name &gt; -g：将包安装到全局环境中。</li><li>npm install &lt; name &gt; –save：安装的同时，将信息写入package.json中，项目路径中若是有package.json文件时，直接使用npm install方法就能够根据dependencies配置安装全部的依赖包，这样代码提交到git时，就不用提交node_modules这个文件夹了。</li><li>npm install &lt; name&gt; –save-dev：安装的同时，将信息写入package.json中项目路径中若是有package.json文件时，直接使用npm install方法就能够根据devDependencies配置安装全部的依赖包，这样代码提交到git时，就不用提交node_modules这个文件夹了。</li><li>npm uninstall moudleName：卸载node模块。</li></ul></blockquote><h2 id="Step4：环境配置"><a href="#Step4：环境配置" class="headerlink" title="Step4：环境配置"></a>Step4：环境配置</h2><p>① 打开安装的目录（默认安装情况下在C:Program Files odejs）</p><p>② 在安装目录下新建两个文件夹【node_global】和【node_cache】</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e32951ff.webp"></p><p>③ 再次打开cmd命令窗口，输入npm config set prefix “你的路径 ode_global”（<code>“你的路径”默认安装的状况下为 C:Program Files odejs</code>）</p><pre><code>npm config set prefix &quot;E:KFodejsode_global&quot;</code></pre><p>④ npm config set cache “你的路径 ode_cache” 可直接复制刚刚新建的空文件夹目录</p><pre><code>npm config set cache &quot;E:KFodejsode_cache&quot;</code></pre><p>执行的时候建议使用管理员权限打开CMD，否则有可能会提示权限不够报错</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e342b11e.webp"></p><p>⑤设置环境变量，打开【系统属性】-【高级】-【环境变量】，在<code>系统变量</code>中新建</p><p>变量名：<code>NODE_PATH</code></p><p>变量值：<code>C:Program Files odejs ode_global ode_modules</code></p><p>（ 用来告诉系统， 下载的模块或者包都在这里了）</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e357c35f.webp"></p><p>⑥ 编辑<code>用户变量（环境变量）</code>的 path，将默认的 C 盘下 <code>APPDataRoaming pm</code> 修改成 <code>C:Program Files odejs ode_global</code>，点击确定</p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e3705629.webp"></p><p>最后别忘了在<code>Path</code>里面添加<code>NODE_PATH</code></p><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e38ee767.webp"></p><p>⑦ 测试，配置完成后，安装个module测试下，咱们就安装最经常使用的express模块，打开cmd窗口，输入以下命令进行模块的全局安装：</p><pre><code>npm install express -g   // -g是全局安装的意思x</code></pre><p><img src="https://blog.463333.xyz/blog/2024/04/660e9e3a98a61.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 建站笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
